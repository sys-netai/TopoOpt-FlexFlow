# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatBufTaskGraph

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Path(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Path()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPath(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Path
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Path
    def Hopnode(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # Path
    def HopnodeAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint32Flags, o)
        return 0

    # Path
    def HopnodeLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Path
    def HopnodeIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # Path
    def Chance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def Start(builder): builder.StartObject(2)
def PathStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddHopnode(builder, hopnode): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(hopnode), 0)
def PathAddHopnode(builder, hopnode):
    """This method is deprecated. Please switch to AddHopnode."""
    return AddHopnode(builder, hopnode)
def StartHopnodeVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def PathStartHopnodeVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartHopnodeVector(builder, numElems)
def AddChance(builder, chance): builder.PrependFloat32Slot(1, chance, 0.0)
def PathAddChance(builder, chance):
    """This method is deprecated. Please switch to AddChance."""
    return AddChance(builder, chance)
def End(builder): return builder.EndObject()
def PathEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)