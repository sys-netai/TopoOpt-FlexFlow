# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FlatBufTaskGraph

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Route(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Route()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRoute(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Route
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Route
    def Fromnode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # Route
    def Tonode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # Route
    def Paths(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from FlatBufTaskGraph.Path import Path
            obj = Path()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Route
    def PathsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # Route
    def PathsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

def Start(builder): builder.StartObject(3)
def RouteStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddFromnode(builder, fromnode): builder.PrependUint32Slot(0, fromnode, 0)
def RouteAddFromnode(builder, fromnode):
    """This method is deprecated. Please switch to AddFromnode."""
    return AddFromnode(builder, fromnode)
def AddTonode(builder, tonode): builder.PrependUint32Slot(1, tonode, 0)
def RouteAddTonode(builder, tonode):
    """This method is deprecated. Please switch to AddTonode."""
    return AddTonode(builder, tonode)
def AddPaths(builder, paths): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(paths), 0)
def RouteAddPaths(builder, paths):
    """This method is deprecated. Please switch to AddPaths."""
    return AddPaths(builder, paths)
def StartPathsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def RouteStartPathsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartPathsVector(builder, numElems)
def End(builder): return builder.EndObject()
def RouteEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)