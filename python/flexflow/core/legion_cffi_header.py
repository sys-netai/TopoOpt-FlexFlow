#!/usr/bin/env python

# Copyright 2020 Stanford University, Los Alamos National Laboratory
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# IMPORTANT:
#   * legion_cffi.py.in is used as an input to string.format()
#   * legion_cffi.py is a generated file and should not be modified by hand

from __future__ import absolute_import, division, print_function, unicode_literals

import cffi

header = 'typedef unsigned long long realm_id_t;\ntypedef unsigned int realm_address_space_t;\ntypedef unsigned realm_task_func_id_t;\ntypedef int realm_reduction_op_id_t;\ntypedef int realm_custom_serdez_id_t;\ntypedef unsigned realm_event_gen_t;\ntypedef unsigned long long realm_barrier_timestamp_t;\ntypedef enum realm_processor_kind_t {\n  NO_KIND, TOC_PROC, LOC_PROC, UTIL_PROC, IO_PROC, PROC_GROUP, PROC_SET, OMP_PROC, PY_PROC,\n} realm_processor_kind_t;\ntypedef enum realm_memory_kind_t {\n  NO_MEMKIND, GLOBAL_MEM, SYSTEM_MEM, REGDMA_MEM, SOCKET_MEM, Z_COPY_MEM, GPU_FB_MEM, DISK_MEM, HDF_MEM, FILE_MEM, LEVEL3_CACHE, LEVEL2_CACHE, LEVEL1_CACHE, GPU_MANAGED_MEM,\n} realm_memory_kind_t;\ntypedef enum realm_file_mode_t {\n  LEGION_FILE_READ_ONLY,\n  LEGION_FILE_READ_WRITE,\n  LEGION_FILE_CREATE\n} realm_file_mode_t;\ntypedef\n  void (*realm_task_pointer_t)(\n    const void * ,\n    size_t ,\n    const void * ,\n    size_t ,\n    realm_id_t );\ntypedef enum legion_error_t {\n  NO_ERROR = 0,\n  ERROR_RESERVED_REDOP_ID = 1,\n  ERROR_DUPLICATE_REDOP_ID = 2,\n  ERROR_RESERVED_TYPE_HANDLE = 3,\n  ERROR_DUPLICATE_TYPE_HANDLE = 4,\n  ERROR_DUPLICATE_FIELD_ID = 5,\n  ERROR_PARENT_TYPE_HANDLE_NONEXISTENT = 6,\n  ERROR_MISSING_PARENT_FIELD_ID = 7,\n  ERROR_RESERVED_PROJECTION_ID = 8,\n  ERROR_DUPLICATE_PROJECTION_ID = 9,\n  ERROR_UNREGISTERED_VARIANT = 10,\n  ERROR_USE_REDUCTION_REGION_REQ = 11,\n  ERROR_INVALID_ACCESSOR_REQUESTED = 12,\n  ERROR_PHYSICAL_REGION_UNMAPPED = 13,\n  ERROR_RESERVED_TASK_ID = 14,\n  ERROR_INVALID_ARG_MAP_DESTRUCTION = 15,\n  ERROR_RESERVED_MAPPING_ID = 16,\n  ERROR_BAD_INDEX_PRIVILEGES = 17,\n  ERROR_BAD_FIELD_PRIVILEGES = 18,\n  ERROR_BAD_REGION_PRIVILEGES = 19,\n  ERROR_BAD_PARTITION_PRIVILEGES = 20,\n  ERROR_BAD_PARENT_INDEX = 21,\n  ERROR_BAD_INDEX_PATH = 22,\n  ERROR_BAD_PARENT_REGION = 23,\n  ERROR_BAD_REGION_PATH = 24,\n  ERROR_BAD_PARTITION_PATH = 25,\n  ERROR_BAD_FIELD = 26,\n  ERROR_BAD_REGION_TYPE = 27,\n  ERROR_INVALID_TYPE_HANDLE = 28,\n  ERROR_LEAF_TASK_VIOLATION = 29,\n  ERROR_INVALID_REDOP_ID = 30,\n  ERROR_REDUCTION_INITIAL_VALUE_MISMATCH = 31,\n  ERROR_INVALID_UNMAP_OP = 32,\n  ERROR_INVALID_DUPLICATE_MAPPING = 33,\n  ERROR_INVALID_REGION_ARGUMENT_INDEX = 34,\n  ERROR_INVALID_MAPPING_ACCESS = 35,\n  ERROR_STALE_INLINE_MAPPING_ACCESS = 36,\n  ERROR_INVALID_INDEX_SPACE_PARENT = 37,\n  ERROR_INVALID_INDEX_PART_PARENT = 38,\n  ERROR_INVALID_INDEX_SPACE_COLOR = 39,\n  ERROR_INVALID_INDEX_PART_COLOR = 40,\n  ERROR_INVALID_INDEX_SPACE_HANDLE = 41,\n  ERROR_INVALID_INDEX_PART_HANDLE = 42,\n  ERROR_FIELD_SPACE_FIELD_MISMATCH = 43,\n  ERROR_INVALID_INSTANCE_FIELD = 44,\n  ERROR_DUPLICATE_INSTANCE_FIELD = 45,\n  ERROR_TYPE_INST_MISMATCH = 46,\n  ERROR_TYPE_INST_MISSIZE = 47,\n  ERROR_INVALID_INDEX_SPACE_ENTRY = 48,\n  ERROR_INVALID_INDEX_PART_ENTRY = 49,\n  ERROR_INVALID_FIELD_SPACE_ENTRY = 50,\n  ERROR_INVALID_REGION_ENTRY = 51,\n  ERROR_INVALID_PARTITION_ENTRY = 52,\n  ERROR_ALIASED_INTRA_TASK_REGIONS = 53,\n  ERROR_MAX_FIELD_OVERFLOW = 54,\n  ERROR_MISSING_TASK_COLLECTION = 55,\n  ERROR_INVALID_IDENTITY_PROJECTION_USE = 56,\n  ERROR_INVALID_PROJECTION_ID = 57,\n  ERROR_NON_DISJOINT_PARTITION = 58,\n  ERROR_BAD_PROJECTION_USE = 59,\n  ERROR_INDEPENDENT_SLICES_VIOLATION = 60,\n  ERROR_INVALID_REGION_HANDLE = 61,\n  ERROR_INVALID_PARTITION_HANDLE = 62,\n  ERROR_VIRTUAL_MAP_IN_LEAF_TASK = 63,\n  ERROR_LEAF_MISMATCH = 64,\n  ERROR_INVALID_PROCESSOR_SELECTION = 65,\n  ERROR_INVALID_VARIANT_SELECTION = 66,\n  ERROR_INVALID_MAPPER_OUTPUT = 67,\n  ERROR_UNINITIALIZED_USE = 68,\n  ERROR_INVALID_INDEX_DOMAIN = 69,\n  ERROR_INVALID_INDEX_PART_DOMAIN = 70,\n  ERROR_PARTITION_VERIFICATION = 71,\n  ERROR_NON_DISJOINT_TASK_REGIONS = 72,\n  ERROR_INVALID_FIELD_ACCESSOR_PRIVILEGES = 73,\n  ERROR_INVALID_PREMAPPED_REGION_LOCATION = 74,\n  ERROR_IDEMPOTENT_MISMATCH = 75,\n  ERROR_INVALID_MAPPER_ID = 76,\n  ERROR_INVALID_TREE_ENTRY = 77,\n  ERROR_FUTURE_MAP_COUNT_MISMATCH = 78,\n  ERROR_MAXIMUM_NODES_EXCEEDED = 79,\n  ERROR_MAXIMUM_PROCS_EXCEEDED = 80,\n  ERROR_INVALID_TASK_ID = 81,\n  ERROR_INVALID_MAPPER_DOMAIN_SLICE = 82,\n  ERROR_UNFOLDABLE_REDUCTION_OP = 83,\n  ERROR_INVALID_INLINE_ID = 84,\n  ERROR_ILLEGAL_MUST_PARALLEL_INLINE = 85,\n  ERROR_FUTURE_SIZE_MISMATCH = 87,\n  ERROR_ILLEGAL_PREDICATE_FUTURE = 88,\n  ERROR_COPY_REQUIREMENTS_MISMATCH = 89,\n  ERROR_INVALID_COPY_FIELDS_SIZE = 90,\n  ERROR_COPY_SPACE_MISMATCH = 91,\n  ERROR_INVALID_COPY_PRIVILEGE = 92,\n  ERROR_INVALID_PARTITION_COLOR = 93,\n  ERROR_EXCEEDED_MAX_CONTEXTS = 94,\n  ERROR_ACQUIRE_MISMATCH = 95,\n  ERROR_RELEASE_MISMATCH = 96,\n  ERROR_INNER_LEAF_MISMATCH = 97,\n  ERROR_INVALID_FIELD_PRIVILEGES = 98,\n  ERROR_ILLEGAL_NESTED_TRACE = 99,\n  ERROR_UNMATCHED_END_TRACE = 100,\n  ERROR_CONFLICTING_PARENT_MAPPING_DEADLOCK = 101,\n  ERROR_CONFLICTING_SIBLING_MAPPING_DEADLOCK = 102,\n  ERROR_INVALID_PARENT_REQUEST = 103,\n  ERROR_INVALID_FIELD_ID = 104,\n  ERROR_NESTED_MUST_EPOCH = 105,\n  ERROR_UNMATCHED_MUST_EPOCH = 106,\n  ERROR_MUST_EPOCH_FAILURE = 107,\n  ERROR_DOMAIN_DIM_MISMATCH = 108,\n  ERROR_INVALID_PROCESSOR_NAME = 109,\n  ERROR_INVALID_INDEX_SUBSPACE_REQUEST = 110,\n  ERROR_INVALID_INDEX_SUBPARTITION_REQUEST = 111,\n  ERROR_INVALID_FIELD_SPACE_REQUEST = 112,\n  ERROR_INVALID_LOGICAL_SUBREGION_REQUEST = 113,\n  ERROR_INVALID_LOGICAL_SUBPARTITION_REQUEST = 114,\n  ERROR_ALIASED_REGION_REQUIREMENTS = 115,\n  ERROR_MISSING_DEFAULT_PREDICATE_RESULT = 116,\n  ERROR_PREDICATE_RESULT_SIZE_MISMATCH = 117,\n  ERROR_MPI_INTEROPERABILITY_NOT_CONFIGURED = 118,\n  ERROR_NESTED_REGISTRATION_CALLBACKS = 119,\n  ERROR_EMPTY_INDEX_PARTITION = 120,\n  ERROR_INCONSISTENT_SEMANTIC_TAG = 121,\n  ERROR_INVALID_SEMANTIC_TAG = 122,\n  ERROR_DUMMY_CONTEXT_OPERATION = 123,\n  ERROR_INVALID_CONTEXT_CONFIGURATION = 124,\n  ERROR_INDEX_TREE_MISMATCH = 125,\n  ERROR_INDEX_PARTITION_ANCESTOR = 126,\n  ERROR_INVALID_PENDING_CHILD = 127,\n  ERROR_ILLEGAL_FILE_ATTACH = 128,\n  ERROR_ILLEGAL_ALLOCATOR_REQUEST = 129,\n  ERROR_ILLEGAL_DETACH_OPERATION = 130,\n  ERROR_NO_STARTUP_RESOURCES = 131,\n  ERROR_ILLEGAL_REDUCTION_VIRTUAL_MAPPING = 132,\n  ERROR_INVALID_MAPPED_REGION_LOCATION = 133,\n  ERROR_RESERVED_SERDEZ_ID = 134,\n  ERROR_DUPLICATE_SERDEZ_ID = 135,\n  ERROR_INVALID_SERDEZ_ID = 136,\n  ERROR_TRACE_VIOLATION = 137,\n  ERROR_INVALID_TARGET_PROC = 138,\n  ERROR_INCOMPLETE_TRACE = 139,\n  ERROR_STATIC_CALL_POST_RUNTIME_START = 140,\n  ERROR_ILLEGAL_GLOBAL_VARIANT_REGISTRATION = 141,\n  ERROR_ILLEGAL_USE_OF_NON_GLOBAL_VARIANT = 142,\n  ERROR_RESERVED_CONSTRAINT_ID = 143,\n  ERROR_INVALID_CONSTRAINT_ID = 144,\n  ERROR_DUPLICATE_CONSTRAINT_ID = 145,\n  ERROR_ILLEGAL_WAIT_FOR_SHUTDOWN = 146,\n  ERROR_DEPRECATED_METHOD_USE = 147,\n  ERROR_MAX_APPLICATION_TASK_ID_EXCEEDED = 148,\n  ERROR_MAX_APPLICATION_MAPPER_ID_EXCEEDED = 149,\n  ERROR_INVALID_ARGUMENTS_TO_MAPPER_RUNTIME = 150,\n  ERROR_INVALID_MAPPER_SYNCHRONIZATION = 151,\n  ERROR_ILLEGAL_PARTIAL_ACQUISITION = 152,\n  ERROR_ILLEGAL_INTERFERING_RESTRICTIONS = 153,\n  ERROR_ILLEGAL_PARTIAL_RESTRICTION = 154,\n  ERROR_ILLEGAL_INTERFERING_ACQUISITIONS = 155,\n  ERROR_UNRESTRICTED_ACQUIRE = 156,\n  ERROR_UNACQUIRED_RELEASE = 157,\n  ERROR_UNATTACHED_DETACH = 158,\n  ERROR_INVALID_PROJECTION_RESULT = 159,\n  ERROR_ILLEGAL_IMPLICIT_MAPPING = 160,\n  ERROR_INNER_TASK_VIOLATION = 161,\n  ERROR_REQUEST_FOR_EMPTY_FUTURE = 162,\n  ERROR_ILLEGAL_REMAP_IN_STATIC_TRACE = 163,\n  ERROR_DYNAMIC_TYPE_MISMATCH = 164,\n  ERROR_MISSING_LOCAL_VARIABLE = 165,\n  ERROR_ACCESSOR_PRIVILEGE_CHECK = 166,\n  ERROR_ACCESSOR_BOUNDS_CHECK = 167,\n  ERROR_DUPLICATE_MPI_CONFIG = 168,\n  ERROR_UNKNOWN_MAPPABLE = 169,\n  ERROR_DEPRECATED_PROJECTION = 170,\n  ERROR_ILLEGAL_PARTIAL_ACQUIRE = 171,\n  ERROR_ILLEGAL_INTERFERING_RESTRICTON = 172,\n  ERROR_ILLEGAL_INTERFERING_ACQUIRE = 173,\n  ERROR_ILLEGAL_REDUCTION_REQUEST = 175,\n  ERROR_PROJECTION_REGION_REQUIREMENTS = 180,\n  ERROR_REQUIREMENTS_INVALID_REGION = 181,\n  ERROR_FIELD_NOT_VALID_FIELD = 182,\n  ERROR_INSTANCE_FIELD_PRIVILEGE = 183,\n  ERROR_ILLEGAL_REQUEST_VIRTUAL_INSTANCE = 185,\n  ERROR_PARENT_TASK_INLINE = 186,\n  ERROR_REGION_NOT_SUBREGION = 189,\n  ERROR_REGION_REQUIREMENT_INLINE = 190,\n  ERROR_PRIVILEGES_FOR_REGION = 191,\n  ERROR_MISSING_INSTANCE_FIELD = 195,\n  ERROR_NUMBER_SOURCE_REQUIREMENTS = 204,\n  ERROR_COPY_SOURCE_REQUIREMENTS = 205,\n  ERROR_COPY_DESTINATION_REQUIREMENT = 206,\n  ERROR_COPY_LAUNCHER_INDEX = 208,\n  ERROR_DESTINATION_INDEX_SPACE = 209,\n  ERROR_ALIASED_REQION_REQUIREMENTS = 210,\n  ERROR_REQUEST_INVALID_REGION = 212,\n  ERROR_INSTANCE_FIELD_DUPLICATE = 215,\n  ERROR_PARENT_TASK_COPY = 216,\n  ERROR_REGION_REQUIREMENT_COPY = 220,\n  ERROR_SOURCE_REGION_REQUIREMENT = 232,\n  ERROR_DESTINATION_REGION_REQUIREMENT = 233,\n  ERROR_COPY_SOURCE_REQUIREMENT = 235,\n  ERROR_INDEX_SPACE_COPY = 237,\n  ERROR_DESTINATION_INDEX_SPACE2 = 240,\n  ERROR_MAPPER_FAILED_ACQUIRE = 245,\n  ERROR_FIELD_NOT_VALID = 248,\n  ERROR_PARENT_TASK_ACQUIRE = 249,\n  ERROR_REGION_REQUIREMENT_ACQUIRE = 253,\n  ERROR_PARENT_TASK_RELEASE = 257,\n  ERROR_REGION_REQUIREMENT_RELEASE = 261,\n  ERROR_MUST_EPOCH_DEPENDENCE = 267,\n  ERROR_PARENT_TASK_PARTITION = 268,\n  ERROR_PARENT_TASK_FILL = 273,\n  ERROR_REGION_REQUIREMENT_FILL = 278,\n  ERROR_PRIVILEGES_REGION_SUBSET = 279,\n  ERROR_INDEX_SPACE_FILL = 281,\n  ERROR_ILLEGAL_FILE_ATTACHMENT = 284,\n  ERROR_REGION_REQUIREMENT_ATTACH = 293,\n  ERROR_PARENT_TASK_DETACH = 295,\n  ERROR_MAPPER_REQUESTED_EXECUTION = 297,\n  ERROR_PARENT_TASK_TASK = 298,\n  ERROR_INDEX_SPACE_NOTSUBSPACE = 299,\n  ERROR_PRIVILEGES_INDEX_SPACE = 300,\n  ERROR_PROJECTION_REGION_REQUIREMENT = 303,\n  ERROR_NONDISJOINT_PARTITION_SELECTED = 304,\n  ERROR_PARTITION_NOT_SUBPARTITION = 312,\n  ERROR_REGION_REQUIREMENT_TASK = 313,\n  ERROR_PRIVILEGES_REGION_NOTSUBSET = 314,\n  ERROR_PRIVILEGES_PARTITION_NOTSUBSET = 315,\n  ERROR_INVALID_LOCATION_CONSTRAINT = 344,\n  ERROR_ALIASED_INTERFERING_REGION = 356,\n  ERROR_REDUCTION_OPERATION_INDEX = 357,\n  ERROR_INDEX_SPACE_TASK = 359,\n  ERROR_TRACE_VIOLATION_RECORDED = 363,\n  ERROR_TRACE_VIOLATION_OPERATION = 364,\n  ERROR_INVALID_MAPPER_REQUEST = 366,\n  ERROR_ILLEGAL_RUNTIME_REMAPPING = 377,\n  ERROR_UNABLE_FIND_TASK_LOCAL = 378,\n  ERROR_INDEXPARTITION_NOT_SAME_INDEX_TREE = 379,\n  ERROR_EXCEEDED_MAXIMUM_NUMBER_LOCAL_FIELDS = 387,\n  ERROR_UNABLE_ALLOCATE_LOCAL_FIELD = 388,\n  ERROR_TASK_ATTEMPTED_ALLOCATE_FIELD = 389,\n  ERROR_PREDICATED_INDEX_TASK_LAUNCH = 393,\n  ERROR_ATTEMPTED_INLINE_MAPPING_REGION = 395,\n  ERROR_ATTEMPTED_EXTERNAL_ATTACH = 397,\n  ERROR_ILLEGAL_PREDICATE_CREATION = 399,\n  ERROR_ILLEGAL_END_TRACE_CALL = 402,\n  ERROR_UNMATCHED_END_STATIC_TRACE = 403,\n  ERROR_ILLEGAL_END_STATIC_TRACE = 404,\n  ERROR_ILLEGAL_ACQUIRE_OPERATION = 405,\n  ERROR_ILLEGAL_RELEASE_OPERATION = 406,\n  ERROR_TASK_FAILED_END_TRACE = 408,\n  ERROR_ILLEGAL_INDEX_SPACE_CREATION = 410,\n  ERROR_UMATCHED_END_TRACE = 411,\n  ERROR_ILLEGAL_NESTED_STATIC_TRACE = 412,\n  ERROR_ILLEGAL_UNION_INDEX_SPACES = 414,\n  ERROR_ILLEGAL_INTERSECT_INDEX_SPACES = 415,\n  ERROR_ILLEGAL_SUBTRACT_INDEX_SPACES = 416,\n  ERROR_ILLEGAL_INDEX_SPACE_DELETION = 417,\n  ERROR_ILLEGAL_INDEX_PARTITION_DELETION = 418,\n  ERROR_ILLEGAL_EQUAL_PARTITION_CREATION = 419,\n  ERROR_ILLEGAL_UNION_PARTITION_CREATION = 420,\n  ERROR_ILLEGAL_INTERSECTION_PARTITION_CREATION = 421,\n  ERROR_ILLEGAL_DIFFERENCE_PARTITION_CREATION = 422,\n  ERROR_ILLEGAL_CREATE_CROSS_PRODUCT_PARTITION = 423,\n  ERROR_ILLEGAL_CREATE_ASSOCIATION = 424,\n  ERROR_ILLEGAL_CREATE_RESTRICTED_PARTITION = 425,\n  ERROR_ILLEGAL_PARTITION_FIELD = 426,\n  ERROR_ILLEGAL_PARTITION_IMAGE = 427,\n  ERROR_ILLEGAL_PARTITION_IMAGE_RANGE = 428,\n  ERROR_ILLEGAL_PARTITION_PREIMAGE = 429,\n  ERROR_ILLEGAL_PARTITION_PREIMAGE_RANGE = 430,\n  ERROR_ILLEGAL_CREATE_PENDING_PARTITION = 431,\n  ERROR_ILLEGAL_CREATE_INDEX_SPACE_UNION = 432,\n  ERROR_ILLEGAL_CREATE_INDEX_SPACE_INTERSECTION = 434,\n  ERROR_ILLEGAL_CREATE_INDEX_SPACE_DIFFERENCE = 436,\n  ERROR_ILLEGAL_CREATE_FIELD_SPACE = 437,\n  ERROR_ILLEGAL_DESTROY_FIELD_SPACE = 438,\n  ERROR_ILLEGAL_NONLOCAL_FIELD_ALLOCATION = 439,\n  ERROR_ILLEGAL_FIELD_DESTRUCTION = 440,\n  ERROR_ILLEGAL_NONLOCAL_FIELD_ALLOCATION2 = 441,\n  ERROR_ILLEGAL_FIELD_DESTRUCTION2 = 442,\n  ERROR_ILLEGAL_REGION_CREATION = 443,\n  ERROR_ILLEGAL_REGION_DESTRUCTION = 444,\n  ERROR_ILLEGAL_PARTITION_DESTRUCTION = 445,\n  ERROR_ILLEGAL_CREATE_FIELD_ALLOCATION = 447,\n  ERROR_ILLEGAL_EXECUTE_TASK_CALL = 448,\n  ERROR_ILLEGAL_EXECUTE_INDEX_SPACE = 449,\n  ERROR_ILLEGAL_MAP_REGION = 451,\n  ERROR_ILLEGAL_REMAP_OPERATION = 452,\n  ERROR_ILLEGAL_UNMAP_OPERATION = 453,\n  ERROR_ILLEGAL_FILL_OPERATION_CALL = 454,\n  ERROR_ILLEGAL_INDEX_FILL_OPERATION_CALL = 455,\n  ERROR_ILLEGAL_COPY_FILL_OPERATION_CALL = 456,\n  ERROR_ILLEGAL_INDEX_COPY_OPERATION = 457,\n  ERROR_ILLEGAL_ATTACH_RESOURCE_OPERATION = 460,\n  ERROR_ILLEGAL_DETACH_RESOURCE_OPERATION = 461,\n  ERROR_ILLEGAL_LEGION_EXECUTE_MUST_EPOCH = 462,\n  ERROR_ILLEGAL_TIMING_MEASUREMENT = 463,\n  ERROR_ILLEGAL_LEGION_MAPPING_FENCE_CALL = 464,\n  ERROR_ILLEGAL_LEGION_EXECUTION_FENCE_CALL = 465,\n  ERROR_ILLEGAL_LEGION_COMPLETE_FRAME_CALL = 466,\n  ERROR_ILLEGAL_GET_PREDICATE_FUTURE = 469,\n  ERROR_ILLEGAL_LEGION_BEGIN_TRACE = 470,\n  ERROR_ILLEGAL_LEGION_END_TRACE = 471,\n  ERROR_ILLEGAL_LEGION_BEGIN_STATIC_TRACE = 472,\n  ERROR_ILLEGAL_LEGION_END_STATIC_TRACE = 473,\n  ERROR_INVALID_PHYSICAL_TRACING = 474,\n  ERROR_INCOMPLETE_PHYSICAL_TRACING = 475,\n  ERROR_PHYSICAL_TRACING_UNSUPPORTED_OP = 476,\n  ERROR_DYNAMIC_CALL_PRE_RUNTIME_START = 477,\n  ERROR_PARENT_INDEX_PARTITION_REQUESTED = 478,\n  ERROR_FIELD_SPACE_HAS_NO_FIELD = 479,\n  ERROR_PARENT_LOGICAL_PARTITION_REQUESTED = 480,\n  ERROR_INVALID_REQUEST_FOR_INDEXSPACE = 481,\n  ERROR_UNABLE_FIND_ENTRY = 482,\n  ERROR_INVALID_REQUEST_INDEXPARTITION = 484,\n  ERROR_INVALID_REQUEST_FIELDSPACE = 487,\n  ERROR_INVALID_REQUEST_LOGICALREGION = 490,\n  ERROR_INVALID_REQUEST_LOGICALPARTITION = 492,\n  ERROR_INVALID_REQUEST_TREE_ID = 493,\n  ERROR_UNABLE_FIND_TOPLEVEL_TREE = 495,\n  ERROR_ILLEGAL_DUPLICATE_REQUEST_ALLOCATOR = 502,\n  ERROR_ILLEGAL_DUPLICATE_FIELD_ID = 510,\n  ERROR_EXCEEDED_MAXIMUM_NUMBER_ALLOCATED_FIELDS = 511,\n  ERROR_ILLEGAL_NOT_PREDICATE_CREATION = 533,\n  ERROR_PARENT_TASK_ATTACH = 534,\n  ERROR_INVALID_REGION_ARGUMENTS = 535,\n  ERROR_INVALID_MAPPER_CONTENT = 536,\n  ERROR_INVALID_DUPLICATE_MAPPER = 537,\n  ERROR_INVALID_UNLOCK_MAPPER = 538,\n  ERROR_UNKNOWN_PROFILER_OPTION = 539,\n  ERROR_MISSING_PROFILER_OPTION = 540,\n  ERROR_INVALID_PROFILER_SERIALIZER = 541,\n  ERROR_INVALID_PROFILER_FILE = 542,\n  ERROR_ILLEGAL_LAYOUT_CONSTRAINT = 543,\n  ERROR_UNSUPPORTED_LAYOUT_CONSTRAINT = 544,\n  ERROR_ACCESSOR_FIELD_SIZE_CHECK = 545,\n  ERROR_ATTACH_OPERATION_MISSING_POINTER = 546,\n  ERROR_RESERVED_VARIANT_ID = 547,\n  ERROR_NON_DENSE_RECTANGLE = 548,\n  ERROR_LIBRARY_COUNT_MISMATCH = 549,\n  ERROR_MPI_INTEROP_MISCONFIGURATION = 550,\n  ERROR_NUMBER_SRC_INDIRECT_REQUIREMENTS = 551,\n  ERROR_NUMBER_DST_INDIRECT_REQUIREMENTS = 552,\n  ERROR_COPY_GATHER_REQUIREMENT = 553,\n  ERROR_COPY_SCATTER_REQUIREMENT = 554,\n  ERROR_MAPPER_SYNCHRONIZATION = 555,\n  ERROR_DUPLICATE_VARIANT_REGISTRATION = 556,\n  ERROR_ILLEGAL_IMPLICIT_TOP_LEVEL_TASK = 557,\n  ERROR_ACCESSOR_COMPATIBILITY_CHECK = 558,\n  ERROR_ILLEGAL_RESOURCE_DESTRUCTION = 559,\n  ERROR_DUPLICATE_FUTURE_SET = 560,\n  ERROR_ATTACH_HDF5 = 561,\n  ERROR_ATTACH_HDF5_CONSTRAINT = 562,\n  ERROR_ILLEGAL_PARTITION_BY_DOMAIN = 563,\n  ERROR_INVALID_PARTITION_BY_DOMAIN_VALUE = 564,\n  ERROR_FUTURE_MAP_REDOP_TYPE_MISMATCH = 565,\n  ERROR_MISSING_PARTITION_BY_WEIGHT_COLOR = 566,\n  ERROR_INVALID_PARTITION_BY_WEIGHT_VALUE = 567,\n  ERROR_LEGION_CONFIGURATION = 568,\n  ERROR_CREATION_FUTURE_TYPE_MISMATCH = 569,\n  ERROR_ARGUMENT_MAP_DIMENSIONALITY = 570,\n  ERROR_INVALID_FUTURE_MAP_POINT = 571,\n  ERROR_ILLEGAL_LOCAL_FUNCTION_TASK_LAUNCH = 572,\n  ERROR_ILLEGAL_SHARED_OWNERSHIP = 573,\n  ERROR_ILLEGAL_PERFORM_REGISTRATION_CALLBACK = 574,\n  ERROR_NON_PIECE_RECTANGLE = 575,\n  ERROR_DEFERRED_ALLOCATION_FAILURE = 576,\n  ERROR_INDEX_SPACE_ATTACH = 577,\n  ERROR_INDEX_SPACE_DETACH = 578,\n  ERROR_POST_EXECUTION_UNORDERED_OPERATION = 579,\n  ERROR_RESERVED_SHARDING_ID = 601,\n  ERROR_DUPLICATE_SHARDING_ID = 602,\n  ERROR_INVALID_SHARDING_ID = 603,\n  ERROR_REPLICATE_TASK_VIOLATION = 604,\n  ERROR_ILLEGAL_SHARDING_FUNCTOR_OUTPUT = 605,\n  ERROR_CONFUSED_USER = 606,\n  ERROR_CONTROL_REPLICATION_VIOLATION = 607,\n  ERROR_INVALID_OUTPUT_SIZE = 608,\n  ERROR_INVALID_OUTPUT_REGION_DOMAIN = 609,\n  ERROR_UNBOUND_OUTPUT_REGION = 610,\n  ERROR_DUPLICATE_OUTPUTS = 611,\n  ERROR_INVALID_GLOBAL_INDEXING = 612,\n  ERROR_INVALID_OUTPUT_FIELD = 613,\n  ERROR_OUTPUT_REGIONS_IN_PREDICATED_TASK = 614,\n  ERROR_OUTPUT_REGIONS_IN_TRACE = 615,\n  ERROR_PARENT_TASK_ADVISEMENT = 616,\n  ERROR_LOGICAL_REGION_FROM_INVALID_OUTPUT_REGION = 617,\n  ERROR_INVALID_FUTURE_MEMORY_KIND = 618,\n  LEGION_WARNING_FUTURE_NONLEAF = 1000,\n  LEGION_WARNING_BLOCKING_EMPTY = 1001,\n  LEGION_WARNING_WAITING_ALL_FUTURES = 1002,\n  LEGION_WARNING_WAITING_REGION = 1003,\n  LEGION_WARNING_MISSING_REGION_WAIT = 1004,\n  LEGION_WARNING_NONLEAF_ACCESSOR = 1005,\n  LEGION_WARNING_UNMAPPED_ACCESSOR = 1006,\n  LEGION_WARNING_READ_DISCARD = 1007,\n  LEGION_WARNING_MISSING_PROC_CONSTRAINT = 1008,\n  LEGION_WARNING_DYNAMIC_PROJECTION_REG = 1009,\n  LEGION_WARNING_DUPLICATE_MPI_CONFIG = 1010,\n  LEGION_WARNING_NEW_PROJECTION_FUNCTORS = 1011,\n  LEGION_WARNING_IGNORE_MEMORY_REQUEST = 1012,\n  LEGION_WARNING_NOT_COPY = 1013,\n  LEGION_WARNING_REGION_REQUIREMENT_INLINE = 1014,\n  LEGION_WARNING_MAPPER_FAILED_ACQUIRE = 1015,\n  LEGION_WARNING_SOURCE_REGION_REQUIREMENT = 1016,\n  LEGION_WARNING_DESTINATION_REGION_REQUIREMENT = 1017,\n  LEGION_WARNING_REGION_REQUIREMENTS_INDEX = 1019,\n  LEGION_WARNING_PRIVILEGE_FIELDS_ACQUIRE = 1020,\n  LEGION_WARNING_PRIVILEGE_FIELDS_RELEASE = 1021,\n  LEGION_WARNING_FILE_ATTACH_OPERATION = 1022,\n  LEGION_WARNING_HDF5_ATTACH_OPERATION = 1023,\n  LEGION_WARNING_REGION_REQUIREMENT_TASK = 1024,\n  LEGION_WARNING_EMPTY_FILL_FIELDS = 1025,\n  LEGION_WARNING_EMPTY_OUTPUT_TARGET = 1026,\n  LEGION_WARNING_IGNORING_SPURIOUS_TARGET = 1027,\n  LEGION_WARNING_IGNORING_PROCESSOR_REQUEST = 1028,\n  LEGION_WARNING_MAPPER_REQUESTED_COMPOSITE = 1030,\n  LEGION_WARNING_MAPPER_REQUESTED_INLINE = 1031,\n  LEGION_WARNING_REGION_REQUIREMENTS_INDIVIDUAL = 1032,\n  LEGION_WARNING_IGNORING_ACQUIRE_REQUEST = 1035,\n  LEGION_WARNING_WAITING_FUTURE_NONLEAF = 1047,\n  LEGION_WARNING_RUNTIME_UNMAPPING_REMAPPING = 1050,\n  LEGION_WARNING_IGNORING_EMPTY_INDEX_TASK_LAUNCH = 1058,\n  LEGION_WARNING_UNINITIALIZED_USE = 1071,\n  LEGION_WARNING_MAPPER_REQUESTED_PROFILING = 1082,\n  LEGION_WARNING_REGION_TREE_STATE_LOGGING = 1083,\n  LEGION_WARNING_DISJOINTNESS_VERIFICATION = 1084,\n  LEGION_WARNING_IGNORING_EMPTY_INDEX_SPACE_FILL = 1085,\n  LEGION_WARNING_IGNORING_EMPTY_INDEX_SPACE_COPY = 1086,\n  LEGION_WARNING_VARIANT_TASK_NOT_MARKED = 1087,\n  LEGION_WARNING_MAPPER_REQUESTED_POST = 1088,\n  LEGION_WARNING_IGNORING_RELEASE_REQUEST = 1089,\n  LEGION_WARNING_PRUNE_DEPTH_EXCEEDED = 1090,\n  LEGION_WARNING_GENERIC_ACCESSOR = 1091,\n  LEGION_WARNING_UNUSED_PROFILING_FILE_NAME = 1092,\n  LEGION_WARNING_INVALID_PRIORITY_CHANGE = 1093,\n  LEGION_WARNING_EXTERNAL_ATTACH_OPERATION = 1094,\n  LEGION_WARNING_EXTERNAL_GARBAGE_PRIORITY = 1095,\n  LEGION_WARNING_MAPPER_INVALID_INSTANCE = 1096,\n  LEGION_WARNING_NON_REPLAYABLE_COUNT_EXCEEDED = 1097,\n  LEGION_WARNING_LARGE_EQUIVALENCE_SET_NODE_USAGE = 1098,\n  LEGION_WARNING_NON_READ_ONLY_UNTRACK_VALID = 1099,\n  LEGION_WARNING_LEAKED_RESOURCE = 1100,\n  LEGION_WARNING_DUPLICATE_DELETION = 1101,\n  LEGION_WARNING_NEW_TEMPLATE_COUNT_EXCEEDED = 1102,\n  LEGION_WARNING_NON_CALLBACK_REGISTRATION = 1103,\n  LEGION_WARNING_COLLECTIVE_INSTANCE_VIOLATION = 1104,\n  LEGION_WARNING_FAILED_INLINING = 1105,\n  LEGION_WARNING_DYNAMIC_SHARDING_REG = 1106,\n  LEGION_WARNING_SLOW_NON_FUNCTIONAL_PROJECTION = 1107,\n  LEGION_WARNING_MISMATCHED_REPLICATED_FUTURES = 1108,\n  LEGION_WARNING_INLINING_NOT_SUPPORTED = 1109,\n  LEGION_WARNING_IGNORING_ADVISED_ANALYSIS_SUBTREE = 1110,\n  LEGION_WARNING_MISMATCHED_UNORDERED_OPERATIONS = 1111,\n  LEGION_WARNING_PARTITION_VERIFICATION = 1112,\n  LEGION_FATAL_MUST_EPOCH_NOADDRESS = 2000,\n  LEGION_FATAL_MUST_EPOCH_NOTASKS = 2001,\n  LEGION_FATAL_DEFAULT_MAPPER_ERROR = 2002,\n  LEGION_FATAL_SHIM_MAPPER_SUPPORT = 2006,\n  LEGION_FATAL_UNKNOWN_FIELD_ID = 2007,\n  LEGION_FATAL_RESTRICTED_SIMULTANEOUS = 2008,\n  LEGION_FATAL_UNIMPLEMENTED_FEATURE = 2009,\n  LEGION_FATAL_INCONSISTENT_PHI_VIEW = 2010,\n  LEGION_FATAL_EXCEEDED_LIBRARY_ID_OFFSET = 2011,\n  LEGION_FATAL_SEPARATE_RUNTIME_INSTANCES = 2012,\n  LEGION_FATAL_UNSUPPORTED_CONSENSUS_SIZE = 2013,\n  LEGION_FATAL_CALLBACK_NOT_PORTABLE = 2014,\n  LEGION_FATAL_REDUCTION_ABA_PROBLEM = 2015,\n} legion_error_t;\ntypedef enum legion_privilege_mode_t {\n  LEGION_NO_ACCESS = 0x00000000,\n  LEGION_READ_PRIV = 0x00000001,\n  LEGION_READ_ONLY = 0x00000001,\n  LEGION_WRITE_PRIV = 0x00000002,\n  LEGION_REDUCE_PRIV = 0x00000004,\n  LEGION_REDUCE = 0x00000004,\n  LEGION_READ_WRITE = 0x00000007,\n  LEGION_DISCARD_MASK = 0x10000000,\n  LEGION_WRITE_ONLY = 0x10000002,\n  LEGION_WRITE_DISCARD = 0x10000007,\n  NO_ACCESS = LEGION_NO_ACCESS,\n  READ_PRIV = LEGION_READ_PRIV,\n  READ_ONLY = LEGION_READ_ONLY,\n  WRITE_PRIV = LEGION_WRITE_PRIV,\n  REDUCE_PRIV = LEGION_REDUCE_PRIV,\n  REDUCE = LEGION_REDUCE,\n  READ_WRITE = LEGION_READ_WRITE,\n  DISCARD_MASK = LEGION_DISCARD_MASK,\n  WRITE_ONLY = LEGION_WRITE_ONLY,\n  WRITE_DISCARD = LEGION_WRITE_DISCARD,\n} legion_privilege_mode_t;\ntypedef enum legion_allocate_mode_t {\n  LEGION_NO_MEMORY = 0x00000000,\n  LEGION_ALLOCABLE = 0x00000001,\n  LEGION_FREEABLE = 0x00000002,\n  LEGION_MUTABLE = 0x00000003,\n  LEGION_REGION_CREATION = 0x00000004,\n  LEGION_REGION_DELETION = 0x00000008,\n  LEGION_ALL_MEMORY = 0x0000000F,\n  NO_MEMORY = LEGION_NO_MEMORY,\n  ALLOCABLE = LEGION_ALLOCABLE,\n  FREEABLE = LEGION_FREEABLE,\n  MUTABLE = LEGION_MUTABLE,\n  REGION_CREATION = LEGION_REGION_CREATION,\n  REGION_DELETION = LEGION_REGION_DELETION,\n  ALL_MEMORY = LEGION_ALL_MEMORY,\n} legion_allocate_mode_t;\ntypedef enum legion_coherence_property_t {\n  LEGION_EXCLUSIVE = 0,\n  LEGION_ATOMIC = 1,\n  LEGION_SIMULTANEOUS = 2,\n  LEGION_RELAXED = 3,\n  EXCLUSIVE = LEGION_EXCLUSIVE,\n  ATOMIC = LEGION_ATOMIC,\n  SIMULTANEOUS = LEGION_SIMULTANEOUS,\n  RELAXED = LEGION_RELAXED,\n} legion_coherence_property_t;\ntypedef enum legion_region_flags_t {\n  LEGION_NO_FLAG = 0x00000000,\n  LEGION_VERIFIED_FLAG = 0x00000001,\n  LEGION_NO_ACCESS_FLAG = 0x00000002,\n  LEGION_RESTRICTED_FLAG = 0x00000004,\n  LEGION_MUST_PREMAP_FLAG = 0x00000008,\n  LEGION_COMPLETE_PROJECTION_WRITE_FLAG = 0x00000010,\n  LEGION_CREATED_OUTPUT_REQUIREMENT_FLAG = 0x00000020,\n  NO_FLAG = LEGION_NO_FLAG,\n  VERIFIED_FLAG = LEGION_VERIFIED_FLAG,\n  NO_ACCESS_FLAG = LEGION_NO_ACCESS_FLAG,\n  RESTRICTED_FLAG = LEGION_RESTRICTED_FLAG,\n  MUST_PREMAP_FLAG = LEGION_MUST_PREMAP_FLAG,\n  COMPLETE_PROJECTION_WRITE_FLAG = LEGION_COMPLETE_PROJECTION_WRITE_FLAG,\n} legion_region_flags_t;\ntypedef enum legion_projection_type_t {\n  LEGION_SINGULAR_PROJECTION,\n  LEGION_PARTITION_PROJECTION,\n  LEGION_REGION_PROJECTION,\n  SINGULAR = LEGION_SINGULAR_PROJECTION,\n  PART_PROJECTION = LEGION_PARTITION_PROJECTION,\n  REG_PROJECTION = LEGION_REGION_PROJECTION,\n} legion_projection_type_t;\ntypedef legion_projection_type_t legion_handle_type_t;\ntypedef enum legion_partition_kind_t {\n  LEGION_DISJOINT_KIND,\n  LEGION_ALIASED_KIND,\n  LEGION_COMPUTE_KIND,\n  LEGION_DISJOINT_COMPLETE_KIND,\n  LEGION_ALIASED_COMPLETE_KIND,\n  LEGION_COMPUTE_COMPLETE_KIND,\n  LEGION_DISJOINT_INCOMPLETE_KIND,\n  LEGION_ALIASED_INCOMPLETE_KIND,\n  LEGION_COMPUTE_INCOMPLETE_KIND,\n  DISJOINT_KIND = LEGION_DISJOINT_KIND,\n  ALIASED_KIND = LEGION_ALIASED_KIND,\n  COMPUTE_KIND = LEGION_COMPUTE_KIND,\n  DISJOINT_COMPLETE_KIND = LEGION_DISJOINT_COMPLETE_KIND,\n  ALIASED_COMPLETE_KIND = LEGION_ALIASED_COMPLETE_KIND,\n  COMPUTE_COMPLETE_KIND = LEGION_COMPUTE_COMPLETE_KIND,\n  DISJOINT_INCOMPLETE_KIND = LEGION_DISJOINT_INCOMPLETE_KIND,\n  ALIASED_INCOMPLETE_KIND = LEGION_ALIASED_INCOMPLETE_KIND,\n  COMPUTE_INCOMPLETE_KIND = LEGION_COMPUTE_INCOMPLETE_KIND,\n} legion_partition_kind_t;\ntypedef enum legion_external_resource_t {\n  LEGION_EXTERNAL_POSIX_FILE,\n  LEGION_EXTERNAL_HDF5_FILE,\n  LEGION_EXTERNAL_INSTANCE,\n  EXTERNAL_POSIX_FILE = LEGION_EXTERNAL_POSIX_FILE,\n  EXTERNAL_HDF5_FILE = LEGION_EXTERNAL_HDF5_FILE,\n  EXTERNAL_INSTANCE = LEGION_EXTERNAL_INSTANCE,\n} legion_external_resource_t;\ntypedef enum legion_timing_measurement_t {\n  LEGION_MEASURE_SECONDS,\n  LEGION_MEASURE_MICRO_SECONDS,\n  LEGION_MEASURE_NANO_SECONDS,\n  MEASURE_SECONDS = LEGION_MEASURE_SECONDS,\n  MEASURE_MICRO_SECONDS = LEGION_MEASURE_MICRO_SECONDS,\n  MEASURE_NANO_SECONDS = LEGION_MEASURE_NANO_SECONDS,\n} legion_timing_measurement_t;\ntypedef enum legion_dependence_type_t {\n  LEGION_NO_DEPENDENCE = 0,\n  LEGION_TRUE_DEPENDENCE = 1,\n  LEGION_ANTI_DEPENDENCE = 2,\n  LEGION_ATOMIC_DEPENDENCE = 3,\n  LEGION_SIMULTANEOUS_DEPENDENCE = 4,\n  NO_DEPENDENCE = LEGION_NO_DEPENDENCE,\n  TRUE_DEPENDENCE = LEGION_TRUE_DEPENDENCE,\n  ANTI_DEPENDENCE = LEGION_ANTI_DEPENDENCE,\n  ATOMIC_DEPENDENCE = LEGION_ATOMIC_DEPENDENCE,\n  SIMULTANEOUS_DEPENDENCE = LEGION_SIMULTANEOUS_DEPENDENCE,\n} legion_dependence_type_t;\nenum {\n  LEGION_NAME_SEMANTIC_TAG = 0,\n  LEGION_SOURCE_FILE_TAG = 1,\n  LEGION_SOURCE_LINE_TAG = 2,\n  LEGION_FIRST_AVAILABLE_SEMANTIC_TAG = 3,\n  NAME_SEMANTIC_TAG = LEGION_NAME_SEMANTIC_TAG,\n  SOURCE_FILE_TAG = LEGION_SOURCE_FILE_TAG,\n  SOURCE_LINE_TAG = LEGION_SOURCE_LINE_TAG,\n  FIRST_AVAILABLE_SEMANTIC_TAG = LEGION_FIRST_AVAILABLE_SEMANTIC_TAG,\n};\ntypedef enum legion_mappable_type_id_t {\n  LEGION_TASK_MAPPABLE = 0,\n  LEGION_COPY_MAPPABLE = 1,\n  LEGION_INLINE_MAPPABLE = 2,\n  LEGION_ACQUIRE_MAPPABLE = 3,\n  LEGION_RELEASE_MAPPABLE = 4,\n  LEGION_CLOSE_MAPPABLE = 5,\n  LEGION_FILL_MAPPABLE = 6,\n  LEGION_PARTITION_MAPPABLE = 7,\n  LEGION_MUST_EPOCH_MAPPABLE = 9,\n  TASK_MAPPABLE = LEGION_TASK_MAPPABLE,\n  COPY_MAPPABLE = LEGION_COPY_MAPPABLE,\n  INLINE_MAPPABLE = LEGION_INLINE_MAPPABLE,\n  ACQUIRE_MAPPABLE = LEGION_ACQUIRE_MAPPABLE,\n  RELEASE_MAPPABLE = LEGION_RELEASE_MAPPABLE,\n  CLOSE_MAPPABLE = LEGION_CLOSE_MAPPABLE,\n  FILL_MAPPABLE = LEGION_FILL_MAPPABLE,\n  PARTITION_MAPPABLE = LEGION_PARTITION_MAPPABLE,\n  MUST_EPOCH_MAPPABLE = LEGION_MUST_EPOCH_MAPPABLE,\n} legion_mappable_type_id;\ntypedef enum legion_type_id_t {\n  LEGION_TYPE_BOOL = 0,\n  LEGION_TYPE_INT8 = 1,\n  LEGION_TYPE_INT16 = 2,\n  LEGION_TYPE_INT32 = 3,\n  LEGION_TYPE_INT64 = 4,\n  LEGION_TYPE_UINT8 = 5,\n  LEGION_TYPE_UINT16 = 6,\n  LEGION_TYPE_UINT32 = 7,\n  LEGION_TYPE_UINT64 = 8,\n  LEGION_TYPE_FLOAT16 = 9,\n  LEGION_TYPE_FLOAT32 = 10,\n  LEGION_TYPE_FLOAT64 = 11,\n  LEGION_TYPE_COMPLEX32 = 12,\n  LEGION_TYPE_COMPLEX64 = 13,\n  LEGION_TYPE_COMPLEX128 = 14,\n  LEGION_TYPE_TOTAL = 15,\n} legion_type_id_t;\ntypedef enum legion_redop_kind_t {\n  LEGION_REDOP_KIND_SUM = 0,\n  LEGION_REDOP_KIND_DIFF = 1,\n  LEGION_REDOP_KIND_PROD = 2,\n  LEGION_REDOP_KIND_DIV = 3,\n  LEGION_REDOP_KIND_MAX = 4,\n  LEGION_REDOP_KIND_MIN = 5,\n  LEGION_REDOP_KIND_OR = 6,\n  LEGION_REDOP_KIND_AND = 7,\n  LEGION_REDOP_KIND_XOR = 8,\n  LEGION_REDOP_KIND_TOTAL = 9,\n} legion_redop_kind_t;\ntypedef enum legion_builtin_redop_t {\n  LEGION_REDOP_BASE = 1048576,\n  LEGION_REDOP_OR_BOOL = LEGION_REDOP_BASE + 0 + LEGION_TYPE_BOOL,\n  LEGION_REDOP_SUM_INT8 = LEGION_REDOP_BASE + 0 + LEGION_TYPE_INT8,\n  LEGION_REDOP_SUM_INT16 = LEGION_REDOP_BASE + 0 + LEGION_TYPE_INT16,\n  LEGION_REDOP_SUM_INT32 = LEGION_REDOP_BASE + 0 + LEGION_TYPE_INT32,\n  LEGION_REDOP_SUM_INT64 = LEGION_REDOP_BASE + 0 + LEGION_TYPE_INT64,\n  LEGION_REDOP_SUM_UINT8 = LEGION_REDOP_BASE + 0 + LEGION_TYPE_UINT8,\n  LEGION_REDOP_SUM_UINT16 = LEGION_REDOP_BASE + 0 + LEGION_TYPE_UINT16,\n  LEGION_REDOP_SUM_UINT32 = LEGION_REDOP_BASE + 0 + LEGION_TYPE_UINT32,\n  LEGION_REDOP_SUM_UINT64 = LEGION_REDOP_BASE + 0 + LEGION_TYPE_UINT64,\n  LEGION_REDOP_SUM_FLOAT32 = LEGION_REDOP_BASE + 0 + LEGION_TYPE_FLOAT32,\n  LEGION_REDOP_SUM_FLOAT64 = LEGION_REDOP_BASE + 0 + LEGION_TYPE_FLOAT64,\n  LEGION_REDOP_DIFF_INT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT8,\n  LEGION_REDOP_DIFF_INT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT16,\n  LEGION_REDOP_DIFF_INT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT32,\n  LEGION_REDOP_DIFF_INT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT64,\n  LEGION_REDOP_DIFF_UINT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT8,\n  LEGION_REDOP_DIFF_UINT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT16,\n  LEGION_REDOP_DIFF_UINT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT32,\n  LEGION_REDOP_DIFF_UINT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT64,\n  LEGION_REDOP_DIFF_FLOAT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + LEGION_TYPE_FLOAT32,\n  LEGION_REDOP_DIFF_FLOAT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + LEGION_TYPE_FLOAT64,\n  LEGION_REDOP_AND_BOOL = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_BOOL,\n  LEGION_REDOP_PROD_INT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT8,\n  LEGION_REDOP_PROD_INT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT16,\n  LEGION_REDOP_PROD_INT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT32,\n  LEGION_REDOP_PROD_INT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT64,\n  LEGION_REDOP_PROD_UINT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT8,\n  LEGION_REDOP_PROD_UINT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT16,\n  LEGION_REDOP_PROD_UINT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT32,\n  LEGION_REDOP_PROD_UINT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT64,\n  LEGION_REDOP_PROD_FLOAT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_FLOAT32,\n  LEGION_REDOP_PROD_FLOAT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_FLOAT64,\n  LEGION_REDOP_DIV_INT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT8,\n  LEGION_REDOP_DIV_INT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT16,\n  LEGION_REDOP_DIV_INT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT32,\n  LEGION_REDOP_DIV_INT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT64,\n  LEGION_REDOP_DIV_UINT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT8,\n  LEGION_REDOP_DIV_UINT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT16,\n  LEGION_REDOP_DIV_UINT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT32,\n  LEGION_REDOP_DIV_UINT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT64,\n  LEGION_REDOP_DIV_FLOAT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_FLOAT32,\n  LEGION_REDOP_DIV_FLOAT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_FLOAT64,\n  LEGION_REDOP_MAX_BOOL = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_BOOL,\n  LEGION_REDOP_MAX_INT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT8,\n  LEGION_REDOP_MAX_INT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT16,\n  LEGION_REDOP_MAX_INT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT32,\n  LEGION_REDOP_MAX_INT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT64,\n  LEGION_REDOP_MAX_UINT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT8,\n  LEGION_REDOP_MAX_UINT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT16,\n  LEGION_REDOP_MAX_UINT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT32,\n  LEGION_REDOP_MAX_UINT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT64,\n  LEGION_REDOP_MAX_FLOAT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_FLOAT32,\n  LEGION_REDOP_MAX_FLOAT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_FLOAT64,\n  LEGION_REDOP_MIN_BOOL = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_BOOL,\n  LEGION_REDOP_MIN_INT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT8,\n  LEGION_REDOP_MIN_INT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT16,\n  LEGION_REDOP_MIN_INT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT32,\n  LEGION_REDOP_MIN_INT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT64,\n  LEGION_REDOP_MIN_UINT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT8,\n  LEGION_REDOP_MIN_UINT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT16,\n  LEGION_REDOP_MIN_UINT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT32,\n  LEGION_REDOP_MIN_UINT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT64,\n  LEGION_REDOP_MIN_FLOAT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_FLOAT32,\n  LEGION_REDOP_MIN_FLOAT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_FLOAT64,\n  LEGION_REDOP_OR_INT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT8,\n  LEGION_REDOP_OR_INT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT16,\n  LEGION_REDOP_OR_INT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT32,\n  LEGION_REDOP_OR_INT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT64,\n  LEGION_REDOP_OR_UINT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT8,\n  LEGION_REDOP_OR_UINT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT16,\n  LEGION_REDOP_OR_UINT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT32,\n  LEGION_REDOP_OR_UINT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT64,\n  LEGION_REDOP_AND_INT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT8,\n  LEGION_REDOP_AND_INT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT16,\n  LEGION_REDOP_AND_INT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT32,\n  LEGION_REDOP_AND_INT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT64,\n  LEGION_REDOP_AND_UINT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT8,\n  LEGION_REDOP_AND_UINT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT16,\n  LEGION_REDOP_AND_UINT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT32,\n  LEGION_REDOP_AND_UINT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT64,\n  LEGION_REDOP_XOR_BOOL = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_BOOL,\n  LEGION_REDOP_XOR_INT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT8,\n  LEGION_REDOP_XOR_INT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT16,\n  LEGION_REDOP_XOR_INT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT32,\n  LEGION_REDOP_XOR_INT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_INT64,\n  LEGION_REDOP_XOR_UINT8 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT8,\n  LEGION_REDOP_XOR_UINT16 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT16,\n  LEGION_REDOP_XOR_UINT32 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT32,\n  LEGION_REDOP_XOR_UINT64 = LEGION_REDOP_BASE + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + (LEGION_TYPE_TOTAL) + LEGION_TYPE_UINT64,\n  LEGION_REDOP_LAST,\n} legion_builtin_redop_t;\ntypedef enum legion_execution_constraint_t {\n  LEGION_ISA_CONSTRAINT = 0,\n  LEGION_PROCESSOR_CONSTRAINT = 1,\n  LEGION_RESOURCE_CONSTRAINT = 2,\n  LEGION_LAUNCH_CONSTRAINT = 3,\n  LEGION_COLOCATION_CONSTRAINT = 4,\n  ISA_CONSTRAINT = LEGION_ISA_CONSTRAINT,\n  PROCESSOR_CONSTRAINT = LEGION_PROCESSOR_CONSTRAINT,\n  RESOURCE_CONSTRAINT = LEGION_RESOURCE_CONSTRAINT,\n  LAUNCH_CONSTRAINT = LEGION_LAUNCH_CONSTRAINT,\n  COLOCATION_CONSTRAINT = LEGION_COLOCATION_CONSTRAINT,\n} legion_execution_constraint_t;\ntypedef enum legion_layout_constraint_t {\n  LEGION_SPECIALIZED_CONSTRAINT = 0,\n  LEGION_MEMORY_CONSTRAINT = 1,\n  LEGION_FIELD_CONSTRAINT = 2,\n  LEGION_ORDERING_CONSTRAINT = 3,\n  LEGION_SPLITTING_CONSTRAINT = 4,\n  LEGION_DIMENSION_CONSTRAINT = 5,\n  LEGION_ALIGNMENT_CONSTRAINT = 6,\n  LEGION_OFFSET_CONSTRAINT = 7,\n  LEGION_POINTER_CONSTRAINT = 8,\n  SPECIALIZED_CONSTRAINT = LEGION_SPECIALIZED_CONSTRAINT,\n  MEMORY_CONSTRAINT = LEGION_MEMORY_CONSTRAINT,\n  FIELD_CONSTRAINT = LEGION_FIELD_CONSTRAINT,\n  ORDERING_CONSTRAINT = LEGION_ORDERING_CONSTRAINT,\n  SPLITTING_CONSTRAINT = LEGION_SPLITTING_CONSTRAINT,\n  DIMENSION_CONSTRAINT = LEGION_DIMENSION_CONSTRAINT,\n  ALIGNMENT_CONSTRAINT = LEGION_ALIGNMENT_CONSTRAINT,\n  OFFSET_CONSTRAINT = LEGION_OFFSET_CONSTRAINT,\n  POINTER_CONSTRAINT = LEGION_POINTER_CONSTRAINT,\n} legion_layout_constraint_t;\ntypedef enum legion_equality_kind_t {\n  LEGION_LT_EK = 0,\n  LEGION_LE_EK = 1,\n  LEGION_GT_EK = 2,\n  LEGION_GE_EK = 3,\n  LEGION_EQ_EK = 4,\n  LEGION_NE_EK = 5,\n  LT_EK = LEGION_LT_EK,\n  LE_EK = LEGION_LE_EK,\n  GT_EK = LEGION_GT_EK,\n  GE_EK = LEGION_GE_EK,\n  EQ_EK = LEGION_EQ_EK,\n  NE_EK = LEGION_NE_EK,\n} legion_equality_kind_t;\ntypedef enum legion_dimension_kind_t {\n  LEGION_DIM_X = 0,\n  LEGION_DIM_Y = 1,\n  LEGION_DIM_Z = 2,\n  LEGION_DIM_W = 3,\n  LEGION_DIM_V = 4,\n  LEGION_DIM_U = 5,\n  LEGION_DIM_T = 6,\n  LEGION_DIM_S = 7,\n  LEGION_DIM_R = 8,\n  LEGION_DIM_F = 9,\n  LEGION_INNER_DIM_X = 10,\n  LEGION_OUTER_DIM_X = 11,\n  LEGION_INNER_DIM_Y = 12,\n  LEGION_OUTER_DIM_Y = 13,\n  LEGION_INNER_DIM_Z = 14,\n  LEGION_OUTER_DIM_Z = 15,\n  LEGION_INNER_DIM_W = 16,\n  LEGION_OUTER_DIM_W = 17,\n  LEGION_INNER_DIM_V = 18,\n  LEGION_OUTER_DIM_V = 19,\n  LEGION_INNER_DIM_U = 20,\n  LEGION_OUTER_DIM_U = 21,\n  LEGION_INNER_DIM_T = 22,\n  LEGION_OUTER_DIM_T = 23,\n  LEGION_INNER_DIM_S = 24,\n  LEGION_OUTER_DIM_S = 25,\n  LEGION_INNER_DIM_R = 26,\n  LEGION_OUTER_DIM_R = 27,\n  DIM_X = LEGION_DIM_X,\n  DIM_Y = LEGION_DIM_Y,\n  DIM_Z = LEGION_DIM_Z,\n  DIM_W = LEGION_DIM_W,\n  DIM_V = LEGION_DIM_V,\n  DIM_U = LEGION_DIM_U,\n  DIM_T = LEGION_DIM_T,\n  DIM_S = LEGION_DIM_S,\n  DIM_R = LEGION_DIM_R,\n  DIM_F = LEGION_DIM_F,\n} legion_dimension_kind_t;\ntypedef enum legion_isa_kind_t {\n  LEGION_X86_ISA = 0x00000001,\n  LEGION_ARM_ISA = 0x00000002,\n  LEGION_PPC_ISA = 0x00000004,\n  LEGION_PTX_ISA = 0x00000008,\n  LEGION_CUDA_ISA = 0x00000010,\n  LEGION_LUA_ISA = 0x00000020,\n  LEGION_TERRA_ISA = 0x00000040,\n  LEGION_LLVM_ISA = 0x00000080,\n  LEGION_GL_ISA = 0x00000100,\n  LEGION_SSE_ISA = 0x00000200,\n  LEGION_SSE2_ISA = 0x00000400,\n  LEGION_SSE3_ISA = 0x00000800,\n  LEGION_SSE4_ISA = 0x00001000,\n  LEGION_AVX_ISA = 0x00002000,\n  LEGION_AVX2_ISA = 0x00004000,\n  LEGION_FMA_ISA = 0x00008000,\n  LEGION_VSX_ISA = 0x00010000,\n  LEGION_SM_10_ISA = 0x00020000,\n  LEGION_SM_20_ISA = 0x00040000,\n  LEGION_SM_30_ISA = 0x00080000,\n  LEGION_SM_35_ISA = 0x00100000,\n  LEGION_NEON_ISA = 0x00200000,\n  X86_ISA = LEGION_X86_ISA,\n  ARM_ISA = LEGION_ARM_ISA,\n  PPC_ISA = LEGION_PPC_ISA,\n  PTX_ISA = LEGION_PTX_ISA,\n  CUDA_ISA = LEGION_CUDA_ISA,\n  LUA_ISA = LEGION_LUA_ISA,\n  TERRA_ISA = LEGION_TERRA_ISA,\n  LLVM_ISA = LEGION_LLVM_ISA,\n  GL_ISA = LEGION_GL_ISA,\n  SSE_ISA = LEGION_SSE_ISA,\n  SSE2_ISA = LEGION_SSE2_ISA,\n  SSE3_ISA = LEGION_SSE3_ISA,\n  SSE4_ISA = LEGION_SSE4_ISA,\n  AVX_ISA = LEGION_AVX_ISA,\n  AVX2_ISA = LEGION_AVX2_ISA,\n  FMA_ISA = LEGION_FMA_ISA,\n  VSX_ISA = LEGION_VSX_ISA,\n  SM_10_ISA = LEGION_SM_10_ISA,\n  SM_20_ISA = LEGION_SM_20_ISA,\n  SM_30_ISA = LEGION_SM_30_ISA,\n  SM_35_ISA = LEGION_SM_35_ISA,\n  NEON_ISA = LEGION_NEON_ISA,\n} legion_isa_kind_t;\ntypedef enum legion_resource_constraint_t {\n  LEGION_L1_CACHE_SIZE = 0,\n  LEGION_L2_CACHE_SIZE = 1,\n  LEGION_L3_CACHE_SIZE = 2,\n  LEGION_L1_CACHE_ASSOCIATIVITY = 3,\n  LEGION_L2_CACHE_ASSOCIATIVITY = 4,\n  LEGION_L3_CACHE_ASSOCIATIVITY = 5,\n  LEGION_REGISTER_FILE_SIZE = 6,\n  LEGION_SHARED_MEMORY_SIZE = 7,\n  LEGION_TEXTURE_CACHE_SIZE = 8,\n  LEGION_CONSTANT_CACHE_SIZE = 9,\n  LEGION_NAMED_BARRIERS = 10,\n  LEGION_SM_COUNT = 11,\n  LEGION_MAX_OCCUPANCY = 12,\n  L1_CACHE_SIZE = LEGION_L1_CACHE_SIZE,\n  L2_CACHE_SIZE = LEGION_L2_CACHE_SIZE,\n  L3_CACHE_SIZE = LEGION_L3_CACHE_SIZE,\n  L1_CACHE_ASSOCIATIVITY = LEGION_L1_CACHE_ASSOCIATIVITY,\n  L2_CACHE_ASSOCIATIVITY = LEGION_L2_CACHE_ASSOCIATIVITY,\n  L3_CACHE_ASSOCIATIVITY = LEGION_L3_CACHE_ASSOCIATIVITY,\n  REGISTER_FILE_SIZE = LEGION_REGISTER_FILE_SIZE,\n  SHARED_MEMORY_SIZE = LEGION_SHARED_MEMORY_SIZE,\n  TEXTURE_CACHE_SIZE = LEGION_TEXTURE_CACHE_SIZE,\n  CONSTANT_CACHE_SIZE = LEGION_CONSTANT_CACHE_SIZE,\n  NAMED_BARRIERS = LEGION_NAMED_BARRIERS,\n  SM_COUNT = LEGION_SM_COUNT,\n  MAX_OCCUPANCY = LEGION_MAX_OCCUPANCY,\n} legion_resource_constraint_t;\ntypedef enum legion_launch_constraint_t {\n  LEGION_CTA_SHAPE = 0,\n  LEGION_GRID_SHAPE = 1,\n  LEGION_DYNAMIC_SHARED_MEMORY = 2,\n  LEGION_REGISTERS_PER_THREAD = 3,\n  LEGION_CTAS_PER_SM = 4,\n  LEGION_NAMED_BARRIERS_PER_CTA = 5,\n} legion_launch_constraint_t;\ntypedef enum legion_specialized_constraint_t {\n  LEGION_NO_SPECIALIZE = 0,\n  LEGION_AFFINE_SPECIALIZE = 1,\n  LEGION_COMPACT_SPECIALIZE = 2,\n  LEGION_AFFINE_REDUCTION_SPECIALIZE = 3,\n  LEGION_COMPACT_REDUCTION_SPECIALIZE = 4,\n  LEGION_VIRTUAL_SPECIALIZE = 5,\n  LEGION_GENERIC_FILE_SPECIALIZE = 6,\n  LEGION_HDF5_FILE_SPECIALIZE = 7,\n  NO_SPECIALIZE = LEGION_NO_SPECIALIZE,\n  AFFINE_SPECIALIZE = LEGION_AFFINE_SPECIALIZE,\n  NORMAL_SPECIALIZE = LEGION_AFFINE_SPECIALIZE,\n  COMPACT_SPECIALIZE = LEGION_COMPACT_SPECIALIZE,\n  AFFINE_REDUCTION_SPECIALIZE = LEGION_AFFINE_REDUCTION_SPECIALIZE,\n  REDUCTION_FOLD_SPECIALIZE = LEGION_AFFINE_REDUCTION_SPECIALIZE,\n  COMPACT_REDUCTION_SPECIALIZE = LEGION_COMPACT_REDUCTION_SPECIALIZE,\n  REDUCTION_LIST_SPECIALIZE = LEGION_COMPACT_REDUCTION_SPECIALIZE,\n  VIRTUAL_SPECIALIZE = LEGION_VIRTUAL_SPECIALIZE,\n  GENERIC_FILE_SPECIALIZE = LEGION_GENERIC_FILE_SPECIALIZE,\n  HDF5_FILE_SPECIALIZE = LEGION_HDF5_FILE_SPECIALIZE,\n} legion_specialized_constraint_t;\ntypedef enum legion_domain_max_rect_dim_t {\n  MAX_POINT_DIM = (4),\n  MAX_RECT_DIM = (4),\n} legion_domain_max_rect_dim_t;\ntypedef realm_processor_kind_t legion_processor_kind_t;\ntypedef realm_memory_kind_t legion_memory_kind_t;\ntypedef realm_reduction_op_id_t legion_reduction_op_id_t;\ntypedef realm_custom_serdez_id_t legion_custom_serdez_id_t;\ntypedef realm_address_space_t legion_address_space_t;\ntypedef realm_file_mode_t legion_file_mode_t;\ntypedef realm_id_t legion_proc_id_t;\ntypedef realm_id_t legion_memory_id_t;\ntypedef int legion_task_priority_t;\ntypedef int legion_garbage_collection_priority_t;\ntypedef long long legion_coord_t;\ntypedef unsigned int legion_color_t;\ntypedef unsigned int legion_field_id_t;\ntypedef unsigned int legion_trace_id_t;\ntypedef unsigned int legion_mapper_id_t;\ntypedef unsigned int legion_context_id_t;\ntypedef unsigned int legion_instance_id_t;\ntypedef unsigned int legion_type_tag_t;\ntypedef unsigned int legion_index_space_id_t;\ntypedef unsigned int legion_index_partition_id_t;\ntypedef unsigned int legion_index_tree_id_t;\ntypedef unsigned int legion_field_space_id_t;\ntypedef unsigned int legion_generation_id_t;\ntypedef unsigned int legion_type_handle;\ntypedef unsigned int legion_projection_id_t;\ntypedef unsigned int legion_sharding_id_t;\ntypedef unsigned int legion_region_tree_id_t;\ntypedef unsigned int legion_tunable_id_t;\ntypedef unsigned int legion_local_variable_id_t;\ntypedef unsigned int legion_replication_id_t;\ntypedef unsigned int legion_shard_id_t;\ntypedef unsigned int legion_variant_id_t;\ntypedef unsigned long long legion_distributed_id_t;\ntypedef unsigned long legion_mapping_tag_id_t;\ntypedef unsigned long legion_code_descriptor_id_t;\ntypedef unsigned long legion_semantic_tag_t;\ntypedef unsigned long long legion_unique_id_t;\ntypedef unsigned long long legion_version_id_t;\ntypedef unsigned long long legion_projection_epoch_id_t;\ntypedef realm_task_func_id_t legion_task_id_t;\ntypedef unsigned long legion_layout_constraint_id_t;\ntypedef long long legion_internal_color_t;\n  typedef struct legion_runtime_t { void *impl; } legion_runtime_t;\n  typedef struct legion_context_t { void *impl; } legion_context_t;\n  typedef struct legion_domain_point_iterator_t { void *impl; } legion_domain_point_iterator_t;\n  typedef struct legion_rect_in_domain_iterator_1d_t { void *impl; } legion_rect_in_domain_iterator_1d_t; typedef struct legion_rect_in_domain_iterator_2d_t { void *impl; } legion_rect_in_domain_iterator_2d_t; typedef struct legion_rect_in_domain_iterator_3d_t { void *impl; } legion_rect_in_domain_iterator_3d_t; typedef struct legion_rect_in_domain_iterator_4d_t { void *impl; } legion_rect_in_domain_iterator_4d_t;;\n  typedef struct legion_coloring_t { void *impl; } legion_coloring_t;\n  typedef struct legion_domain_coloring_t { void *impl; } legion_domain_coloring_t;\n  typedef struct legion_point_coloring_t { void *impl; } legion_point_coloring_t;\n  typedef struct legion_domain_point_coloring_t { void *impl; } legion_domain_point_coloring_t;\n  typedef struct legion_multi_domain_point_coloring_t { void *impl; } legion_multi_domain_point_coloring_t;\n  typedef struct legion_index_space_allocator_t { void *impl; } legion_index_space_allocator_t;\n  typedef struct legion_field_allocator_t { void *impl; } legion_field_allocator_t;\n  typedef struct legion_argument_map_t { void *impl; } legion_argument_map_t;\n  typedef struct legion_predicate_t { void *impl; } legion_predicate_t;\n  typedef struct legion_future_t { void *impl; } legion_future_t;\n  typedef struct legion_future_map_t { void *impl; } legion_future_map_t;\n  typedef struct legion_deferred_buffer_char_1d_t { void *impl; } legion_deferred_buffer_char_1d_t; typedef struct legion_deferred_buffer_char_2d_t { void *impl; } legion_deferred_buffer_char_2d_t; typedef struct legion_deferred_buffer_char_3d_t { void *impl; } legion_deferred_buffer_char_3d_t; typedef struct legion_deferred_buffer_char_4d_t { void *impl; } legion_deferred_buffer_char_4d_t;\n  typedef struct legion_task_launcher_t { void *impl; } legion_task_launcher_t;\n  typedef struct legion_index_launcher_t { void *impl; } legion_index_launcher_t;\n  typedef struct legion_inline_launcher_t { void *impl; } legion_inline_launcher_t;\n  typedef struct legion_copy_launcher_t { void *impl; } legion_copy_launcher_t;\n  typedef struct legion_index_copy_launcher_t { void *impl; } legion_index_copy_launcher_t;\n  typedef struct legion_fill_launcher_t { void *impl; } legion_fill_launcher_t;\n  typedef struct legion_index_fill_launcher_t { void *impl; } legion_index_fill_launcher_t;\n  typedef struct legion_acquire_launcher_t { void *impl; } legion_acquire_launcher_t;\n  typedef struct legion_release_launcher_t { void *impl; } legion_release_launcher_t;\n  typedef struct legion_attach_launcher_t { void *impl; } legion_attach_launcher_t;\n  typedef struct legion_index_attach_launcher_t { void *impl; } legion_index_attach_launcher_t;\n  typedef struct legion_must_epoch_launcher_t { void *impl; } legion_must_epoch_launcher_t;\n  typedef struct legion_physical_region_t { void *impl; } legion_physical_region_t;\n  typedef struct legion_external_resources_t { void *impl; } legion_external_resources_t;\n  typedef struct legion_accessor_array_1d_t { void *impl; } legion_accessor_array_1d_t; typedef struct legion_accessor_array_2d_t { void *impl; } legion_accessor_array_2d_t; typedef struct legion_accessor_array_3d_t { void *impl; } legion_accessor_array_3d_t; typedef struct legion_accessor_array_4d_t { void *impl; } legion_accessor_array_4d_t;\n  typedef struct legion_task_t { void *impl; } legion_task_t;\n  typedef struct legion_copy_t { void *impl; } legion_copy_t;\n  typedef struct legion_fill_t { void *impl; } legion_fill_t;\n  typedef struct legion_inline_t { void *impl; } legion_inline_t;\n  typedef struct legion_mappable_t { void *impl; } legion_mappable_t;\n  typedef struct legion_region_requirement_t { void *impl; } legion_region_requirement_t;\n  typedef struct legion_output_requirement_t { void *impl; } legion_output_requirement_t;\n  typedef struct legion_machine_t { void *impl; } legion_machine_t;\n  typedef struct legion_mapper_t { void *impl; } legion_mapper_t;\n  typedef struct legion_default_mapper_t { void *impl; } legion_default_mapper_t;\n  typedef struct legion_processor_query_t { void *impl; } legion_processor_query_t;\n  typedef struct legion_memory_query_t { void *impl; } legion_memory_query_t;\n  typedef struct legion_machine_query_interface_t { void *impl; } legion_machine_query_interface_t;\n  typedef struct legion_execution_constraint_set_t { void *impl; } legion_execution_constraint_set_t;\n  typedef struct legion_layout_constraint_set_t { void *impl; } legion_layout_constraint_set_t;\n  typedef struct legion_task_layout_constraint_set_t { void *impl; } legion_task_layout_constraint_set_t;\n  typedef struct legion_slice_task_output_t { void *impl; } legion_slice_task_output_t;\n  typedef struct legion_map_task_input_t { void *impl; } legion_map_task_input_t;\n  typedef struct legion_map_task_output_t { void *impl; } legion_map_task_output_t;\n  typedef struct legion_physical_instance_t { void *impl; } legion_physical_instance_t;\n  typedef struct legion_mapper_runtime_t { void *impl; } legion_mapper_runtime_t;\n  typedef struct legion_mapper_context_t { void *impl; } legion_mapper_context_t;\n  typedef struct legion_field_map_t { void *impl; } legion_field_map_t;\n  typedef struct legion_ptr_t {\n    long long int value;\n  } legion_ptr_t;\n  typedef legion_coord_t coord_t;\n  typedef struct legion_point_1d_t { coord_t x[1]; } legion_point_1d_t; typedef struct legion_point_2d_t { coord_t x[2]; } legion_point_2d_t; typedef struct legion_point_3d_t { coord_t x[3]; } legion_point_3d_t; typedef struct legion_point_4d_t { coord_t x[4]; } legion_point_4d_t;\n  typedef struct legion_rect_1d_t { legion_point_1d_t lo, hi; } legion_rect_1d_t; typedef struct legion_rect_2d_t { legion_point_2d_t lo, hi; } legion_rect_2d_t; typedef struct legion_rect_3d_t { legion_point_3d_t lo, hi; } legion_rect_3d_t; typedef struct legion_rect_4d_t { legion_point_4d_t lo, hi; } legion_rect_4d_t;\n  typedef struct legion_blockify_1d_t { legion_point_1d_t block_size; legion_point_1d_t offset; } legion_blockify_1d_t; typedef struct legion_blockify_2d_t { legion_point_2d_t block_size; legion_point_2d_t offset; } legion_blockify_2d_t; typedef struct legion_blockify_3d_t { legion_point_3d_t block_size; legion_point_3d_t offset; } legion_blockify_3d_t; typedef struct legion_blockify_4d_t { legion_point_4d_t block_size; legion_point_4d_t offset; } legion_blockify_4d_t;\n  typedef struct legion_transform_1x1_t { coord_t trans[1][1]; } legion_transform_1x1_t; typedef struct legion_transform_1x2_t { coord_t trans[1][2]; } legion_transform_1x2_t; typedef struct legion_transform_1x3_t { coord_t trans[1][3]; } legion_transform_1x3_t; typedef struct legion_transform_1x4_t { coord_t trans[1][4]; } legion_transform_1x4_t; typedef struct legion_transform_2x1_t { coord_t trans[2][1]; } legion_transform_2x1_t; typedef struct legion_transform_2x2_t { coord_t trans[2][2]; } legion_transform_2x2_t; typedef struct legion_transform_2x3_t { coord_t trans[2][3]; } legion_transform_2x3_t; typedef struct legion_transform_2x4_t { coord_t trans[2][4]; } legion_transform_2x4_t; typedef struct legion_transform_3x1_t { coord_t trans[3][1]; } legion_transform_3x1_t; typedef struct legion_transform_3x2_t { coord_t trans[3][2]; } legion_transform_3x2_t; typedef struct legion_transform_3x3_t { coord_t trans[3][3]; } legion_transform_3x3_t; typedef struct legion_transform_3x4_t { coord_t trans[3][4]; } legion_transform_3x4_t; typedef struct legion_transform_4x1_t { coord_t trans[4][1]; } legion_transform_4x1_t; typedef struct legion_transform_4x2_t { coord_t trans[4][2]; } legion_transform_4x2_t; typedef struct legion_transform_4x3_t { coord_t trans[4][3]; } legion_transform_4x3_t; typedef struct legion_transform_4x4_t { coord_t trans[4][4]; } legion_transform_4x4_t;\n  typedef struct legion_affine_transform_1x1_t { legion_transform_1x1_t transform; legion_point_1d_t offset; } legion_affine_transform_1x1_t; typedef struct legion_affine_transform_1x2_t { legion_transform_1x2_t transform; legion_point_1d_t offset; } legion_affine_transform_1x2_t; typedef struct legion_affine_transform_1x3_t { legion_transform_1x3_t transform; legion_point_1d_t offset; } legion_affine_transform_1x3_t; typedef struct legion_affine_transform_1x4_t { legion_transform_1x4_t transform; legion_point_1d_t offset; } legion_affine_transform_1x4_t; typedef struct legion_affine_transform_2x1_t { legion_transform_2x1_t transform; legion_point_2d_t offset; } legion_affine_transform_2x1_t; typedef struct legion_affine_transform_2x2_t { legion_transform_2x2_t transform; legion_point_2d_t offset; } legion_affine_transform_2x2_t; typedef struct legion_affine_transform_2x3_t { legion_transform_2x3_t transform; legion_point_2d_t offset; } legion_affine_transform_2x3_t; typedef struct legion_affine_transform_2x4_t { legion_transform_2x4_t transform; legion_point_2d_t offset; } legion_affine_transform_2x4_t; typedef struct legion_affine_transform_3x1_t { legion_transform_3x1_t transform; legion_point_3d_t offset; } legion_affine_transform_3x1_t; typedef struct legion_affine_transform_3x2_t { legion_transform_3x2_t transform; legion_point_3d_t offset; } legion_affine_transform_3x2_t; typedef struct legion_affine_transform_3x3_t { legion_transform_3x3_t transform; legion_point_3d_t offset; } legion_affine_transform_3x3_t; typedef struct legion_affine_transform_3x4_t { legion_transform_3x4_t transform; legion_point_3d_t offset; } legion_affine_transform_3x4_t; typedef struct legion_affine_transform_4x1_t { legion_transform_4x1_t transform; legion_point_4d_t offset; } legion_affine_transform_4x1_t; typedef struct legion_affine_transform_4x2_t { legion_transform_4x2_t transform; legion_point_4d_t offset; } legion_affine_transform_4x2_t; typedef struct legion_affine_transform_4x3_t { legion_transform_4x3_t transform; legion_point_4d_t offset; } legion_affine_transform_4x3_t; typedef struct legion_affine_transform_4x4_t { legion_transform_4x4_t transform; legion_point_4d_t offset; } legion_affine_transform_4x4_t;\n  typedef struct legion_domain_t {\n    realm_id_t is_id;\n    int dim;\n    coord_t rect_data[8];\n  } legion_domain_t;\n  typedef struct legion_domain_point_t {\n    int dim;\n    coord_t point_data[4];\n  } legion_domain_point_t;\n  typedef struct legion_domain_transform_t {\n    int m, n;\n    coord_t matrix[16];\n  } legion_domain_transform_t;\n  typedef struct legion_domain_affine_transform_t {\n    legion_domain_transform_t transform;\n    legion_domain_point_t offset;\n  } legion_domain_affine_transform_t;\n  typedef struct legion_index_space_t {\n    legion_index_space_id_t id;\n    legion_index_tree_id_t tid;\n    legion_type_tag_t type_tag;\n  } legion_index_space_t;\n  typedef struct legion_index_partition_t {\n    legion_index_partition_id_t id;\n    legion_index_tree_id_t tid;\n    legion_type_tag_t type_tag;\n  } legion_index_partition_t;\n  typedef struct legion_field_space_t {\n    legion_field_space_id_t id;\n  } legion_field_space_t;\n  typedef struct legion_logical_region_t {\n    legion_region_tree_id_t tree_id;\n    legion_index_space_t index_space;\n    legion_field_space_t field_space;\n  } legion_logical_region_t;\n  typedef struct legion_logical_partition_t {\n    legion_region_tree_id_t tree_id;\n    legion_index_partition_t index_partition;\n    legion_field_space_t field_space;\n  } legion_logical_partition_t;\n  typedef struct legion_task_argument_t {\n    void *args;\n    size_t arglen;\n  } legion_task_argument_t;\n  typedef struct legion_byte_offset_t {\n    int offset;\n  } legion_byte_offset_t;\n  typedef struct legion_input_args_t {\n    char **argv;\n    int argc;\n  } legion_input_args_t;\n  typedef struct legion_task_config_options_t {\n    _Bool leaf ;\n    _Bool inner ;\n    _Bool idempotent ;\n    _Bool replicable ;\n  } legion_task_config_options_t;\n  typedef struct legion_processor_t {\n    realm_id_t id;\n  } legion_processor_t;\n  typedef struct legion_memory_t {\n    realm_id_t id;\n  } legion_memory_t;\n  typedef struct legion_task_slice_t {\n    legion_domain_t domain;\n    legion_processor_t proc;\n    _Bool recurse;\n    _Bool stealable;\n  } legion_task_slice_t;\n  typedef struct legion_phase_barrier_t {\n    realm_id_t id;\n    realm_barrier_timestamp_t timestamp;\n  } legion_phase_barrier_t;\n  typedef struct legion_dynamic_collective_t {\n    realm_id_t id;\n    realm_barrier_timestamp_t timestamp;\n    legion_reduction_op_id_t redop;\n  } legion_dynamic_collective_t;\n  typedef struct legion_task_options_t {\n    legion_processor_t initial_proc;\n    _Bool inline_task;\n    _Bool stealable;\n    _Bool map_locally;\n    _Bool valid_instances;\n    _Bool memoize;\n    _Bool replicate;\n    legion_task_priority_t parent_priority;\n  } legion_task_options_t;\n  typedef struct legion_slice_task_input_t {\n    legion_domain_t domain;\n  } legion_slice_task_input_t;\n  typedef\n    void (*legion_registration_callback_pointer_t)(\n      legion_machine_t ,\n      legion_runtime_t ,\n      const legion_processor_t * ,\n      unsigned );\n  typedef realm_task_pointer_t legion_task_pointer_wrapped_t;\n  typedef\n    legion_logical_region_t (*legion_projection_functor_logical_region_t)(\n      legion_runtime_t ,\n      legion_logical_region_t ,\n      legion_domain_point_t ,\n      legion_domain_t );\n  typedef\n    legion_logical_region_t (*legion_projection_functor_logical_partition_t)(\n      legion_runtime_t ,\n      legion_logical_partition_t ,\n      legion_domain_point_t ,\n      legion_domain_t );\n  typedef\n    legion_logical_region_t (*legion_projection_functor_logical_region_mappable_t)(\n      legion_runtime_t ,\n      legion_mappable_t ,\n      unsigned ,\n      legion_logical_region_t ,\n      legion_domain_point_t );\n  typedef\n    legion_logical_region_t (*legion_projection_functor_logical_partition_mappable_t)(\n      legion_runtime_t ,\n      legion_mappable_t ,\n      unsigned ,\n      legion_logical_partition_t ,\n      legion_domain_point_t );\n  legion_ptr_t\n  legion_ptr_nil(void);\n  _Bool\n  legion_ptr_is_null(legion_ptr_t ptr);\n  legion_ptr_t\n  legion_ptr_safe_cast(legion_runtime_t runtime,\n                       legion_context_t ctx,\n                       legion_ptr_t pointer,\n                       legion_logical_region_t region);\n  legion_domain_t\n  legion_domain_empty(unsigned dim);\n  legion_domain_t legion_domain_from_rect_1d(legion_rect_1d_t r); legion_domain_t legion_domain_from_rect_2d(legion_rect_2d_t r); legion_domain_t legion_domain_from_rect_3d(legion_rect_3d_t r); legion_domain_t legion_domain_from_rect_4d(legion_rect_4d_t r);\n  legion_domain_t\n  legion_domain_from_index_space(legion_runtime_t runtime,\n                                 legion_index_space_t is);\n  legion_rect_1d_t legion_domain_get_rect_1d(legion_domain_t d); legion_rect_2d_t legion_domain_get_rect_2d(legion_domain_t d); legion_rect_3d_t legion_domain_get_rect_3d(legion_domain_t d); legion_rect_4d_t legion_domain_get_rect_4d(legion_domain_t d);\n  _Bool\n  legion_domain_is_dense(legion_domain_t d);\n  legion_rect_1d_t legion_domain_get_bounds_1d(legion_domain_t d); legion_rect_2d_t legion_domain_get_bounds_2d(legion_domain_t d); legion_rect_3d_t legion_domain_get_bounds_3d(legion_domain_t d); legion_rect_4d_t legion_domain_get_bounds_4d(legion_domain_t d);\n  _Bool\n  legion_domain_contains(legion_domain_t d, legion_domain_point_t p);\n  size_t\n  legion_domain_get_volume(legion_domain_t d);\n  legion_domain_transform_t\n  legion_domain_transform_identity(unsigned m, unsigned n);\n  legion_domain_transform_t legion_domain_transform_from_1x1(legion_transform_1x1_t t); legion_domain_transform_t legion_domain_transform_from_1x2(legion_transform_1x2_t t); legion_domain_transform_t legion_domain_transform_from_1x3(legion_transform_1x3_t t); legion_domain_transform_t legion_domain_transform_from_1x4(legion_transform_1x4_t t); legion_domain_transform_t legion_domain_transform_from_2x1(legion_transform_2x1_t t); legion_domain_transform_t legion_domain_transform_from_2x2(legion_transform_2x2_t t); legion_domain_transform_t legion_domain_transform_from_2x3(legion_transform_2x3_t t); legion_domain_transform_t legion_domain_transform_from_2x4(legion_transform_2x4_t t); legion_domain_transform_t legion_domain_transform_from_3x1(legion_transform_3x1_t t); legion_domain_transform_t legion_domain_transform_from_3x2(legion_transform_3x2_t t); legion_domain_transform_t legion_domain_transform_from_3x3(legion_transform_3x3_t t); legion_domain_transform_t legion_domain_transform_from_3x4(legion_transform_3x4_t t); legion_domain_transform_t legion_domain_transform_from_4x1(legion_transform_4x1_t t); legion_domain_transform_t legion_domain_transform_from_4x2(legion_transform_4x2_t t); legion_domain_transform_t legion_domain_transform_from_4x3(legion_transform_4x3_t t); legion_domain_transform_t legion_domain_transform_from_4x4(legion_transform_4x4_t t);\n  legion_domain_affine_transform_t\n  legion_domain_affine_transform_identity(unsigned m, unsigned n);\n  legion_domain_affine_transform_t legion_domain_affine_transform_from_1x1(legion_affine_transform_1x1_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_1x2(legion_affine_transform_1x2_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_1x3(legion_affine_transform_1x3_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_1x4(legion_affine_transform_1x4_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_2x1(legion_affine_transform_2x1_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_2x2(legion_affine_transform_2x2_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_2x3(legion_affine_transform_2x3_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_2x4(legion_affine_transform_2x4_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_3x1(legion_affine_transform_3x1_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_3x2(legion_affine_transform_3x2_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_3x3(legion_affine_transform_3x3_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_3x4(legion_affine_transform_3x4_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_4x1(legion_affine_transform_4x1_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_4x2(legion_affine_transform_4x2_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_4x3(legion_affine_transform_4x3_t t); legion_domain_affine_transform_t legion_domain_affine_transform_from_4x4(legion_affine_transform_4x4_t t);\n  legion_domain_point_t legion_domain_point_from_point_1d(legion_point_1d_t p); legion_domain_point_t legion_domain_point_from_point_2d(legion_point_2d_t p); legion_domain_point_t legion_domain_point_from_point_3d(legion_point_3d_t p); legion_domain_point_t legion_domain_point_from_point_4d(legion_point_4d_t p);\n  legion_point_1d_t legion_domain_point_get_point_1d(legion_domain_point_t p); legion_point_2d_t legion_domain_point_get_point_2d(legion_domain_point_t p); legion_point_3d_t legion_domain_point_get_point_3d(legion_domain_point_t p); legion_point_4d_t legion_domain_point_get_point_4d(legion_domain_point_t p);\n  legion_domain_point_t\n  legion_domain_point_origin(unsigned dim);\n  legion_domain_point_t\n  legion_domain_point_nil(void);\n  _Bool\n  legion_domain_point_is_null(legion_domain_point_t point);\n  legion_domain_point_t\n  legion_domain_point_safe_cast(legion_runtime_t runtime,\n                                legion_context_t ctx,\n                                legion_domain_point_t point,\n                                legion_logical_region_t region);\n  legion_domain_point_iterator_t\n  legion_domain_point_iterator_create(legion_domain_t handle);\n  void\n  legion_domain_point_iterator_destroy(legion_domain_point_iterator_t handle);\n  _Bool\n  legion_domain_point_iterator_has_next(legion_domain_point_iterator_t handle);\n  legion_domain_point_t\n  legion_domain_point_iterator_next(legion_domain_point_iterator_t handle);\n  legion_rect_in_domain_iterator_1d_t legion_rect_in_domain_iterator_create_1d(legion_domain_t handle); legion_rect_in_domain_iterator_2d_t legion_rect_in_domain_iterator_create_2d(legion_domain_t handle); legion_rect_in_domain_iterator_3d_t legion_rect_in_domain_iterator_create_3d(legion_domain_t handle); legion_rect_in_domain_iterator_4d_t legion_rect_in_domain_iterator_create_4d(legion_domain_t handle);\n  void legion_rect_in_domain_iterator_destroy_1d( legion_rect_in_domain_iterator_1d_t handle); void legion_rect_in_domain_iterator_destroy_2d( legion_rect_in_domain_iterator_2d_t handle); void legion_rect_in_domain_iterator_destroy_3d( legion_rect_in_domain_iterator_3d_t handle); void legion_rect_in_domain_iterator_destroy_4d( legion_rect_in_domain_iterator_4d_t handle);\n  _Bool legion_rect_in_domain_iterator_valid_1d( legion_rect_in_domain_iterator_1d_t handle); _Bool legion_rect_in_domain_iterator_valid_2d( legion_rect_in_domain_iterator_2d_t handle); _Bool legion_rect_in_domain_iterator_valid_3d( legion_rect_in_domain_iterator_3d_t handle); _Bool legion_rect_in_domain_iterator_valid_4d( legion_rect_in_domain_iterator_4d_t handle);\n  _Bool legion_rect_in_domain_iterator_step_1d( legion_rect_in_domain_iterator_1d_t handle); _Bool legion_rect_in_domain_iterator_step_2d( legion_rect_in_domain_iterator_2d_t handle); _Bool legion_rect_in_domain_iterator_step_3d( legion_rect_in_domain_iterator_3d_t handle); _Bool legion_rect_in_domain_iterator_step_4d( legion_rect_in_domain_iterator_4d_t handle);\n  legion_rect_1d_t legion_rect_in_domain_iterator_get_rect_1d( legion_rect_in_domain_iterator_1d_t handle); legion_rect_2d_t legion_rect_in_domain_iterator_get_rect_2d( legion_rect_in_domain_iterator_2d_t handle); legion_rect_3d_t legion_rect_in_domain_iterator_get_rect_3d( legion_rect_in_domain_iterator_3d_t handle); legion_rect_4d_t legion_rect_in_domain_iterator_get_rect_4d( legion_rect_in_domain_iterator_4d_t handle);\n  legion_coloring_t\n  legion_coloring_create(void);\n  void\n  legion_coloring_destroy(legion_coloring_t handle);\n  void\n  legion_coloring_ensure_color(legion_coloring_t handle,\n                               legion_color_t color);\n  void\n  legion_coloring_add_point(legion_coloring_t handle,\n                            legion_color_t color,\n                            legion_ptr_t point);\n  void\n  legion_coloring_delete_point(legion_coloring_t handle,\n                               legion_color_t color,\n                               legion_ptr_t point);\n  _Bool\n  legion_coloring_has_point(legion_coloring_t handle,\n                            legion_color_t color,\n                            legion_ptr_t point);\n  void\n  legion_coloring_add_range(legion_coloring_t handle,\n                            legion_color_t color,\n                            legion_ptr_t start,\n                            legion_ptr_t end );\n  legion_domain_coloring_t\n  legion_domain_coloring_create(void);\n  void\n  legion_domain_coloring_destroy(legion_domain_coloring_t handle);\n  void\n  legion_domain_coloring_color_domain(legion_domain_coloring_t handle,\n                                      legion_color_t color,\n                                      legion_domain_t domain);\n  legion_domain_t\n  legion_domain_coloring_get_color_space(legion_domain_coloring_t handle);\n  legion_point_coloring_t\n  legion_point_coloring_create(void);\n  void\n  legion_point_coloring_destroy(\n    legion_point_coloring_t handle);\n  void\n  legion_point_coloring_add_point(legion_point_coloring_t handle,\n                                  legion_domain_point_t color,\n                                  legion_ptr_t point);\n  void\n  legion_point_coloring_add_range(legion_point_coloring_t handle,\n                                  legion_domain_point_t color,\n                                  legion_ptr_t start,\n                                  legion_ptr_t end );\n  legion_domain_point_coloring_t\n  legion_domain_point_coloring_create(void);\n  void\n  legion_domain_point_coloring_destroy(\n    legion_domain_point_coloring_t handle);\n  void\n  legion_domain_point_coloring_color_domain(\n    legion_domain_point_coloring_t handle,\n    legion_domain_point_t color,\n    legion_domain_t domain);\n  legion_multi_domain_point_coloring_t\n  legion_multi_domain_point_coloring_create(void);\n  void\n  legion_multi_domain_point_coloring_destroy(\n    legion_multi_domain_point_coloring_t handle);\n  void\n  legion_multi_domain_point_coloring_color_domain(\n    legion_multi_domain_point_coloring_t handle,\n    legion_domain_point_t color,\n    legion_domain_t domain);\n  legion_index_space_t\n  legion_index_space_create(legion_runtime_t runtime,\n                            legion_context_t ctx,\n                            size_t max_num_elmts);\n  legion_index_space_t\n  legion_index_space_create_domain(legion_runtime_t runtime,\n                                   legion_context_t ctx,\n                                   legion_domain_t domain);\n  legion_index_space_t\n  legion_index_space_create_future(legion_runtime_t runtime,\n                                   legion_context_t ctx,\n                                   size_t dimensions,\n                                   legion_future_t future,\n                                   legion_type_tag_t type_tag );\n  legion_index_space_t\n  legion_index_space_union(legion_runtime_t runtime,\n                           legion_context_t ctx,\n                           const legion_index_space_t *spaces,\n                           size_t num_spaces);\n  legion_index_space_t\n  legion_index_space_intersection(legion_runtime_t runtime,\n                                  legion_context_t ctx,\n                                  const legion_index_space_t *spaces,\n                                  size_t num_spaces);\n  legion_index_space_t\n  legion_index_space_subtraction(legion_runtime_t runtime,\n                                 legion_context_t ctx,\n                                 legion_index_space_t left,\n                                 legion_index_space_t right);\n  _Bool\n  legion_index_space_has_multiple_domains(legion_runtime_t runtime,\n                                          legion_index_space_t handle);\n  legion_domain_t\n  legion_index_space_get_domain(legion_runtime_t runtime,\n                                legion_index_space_t handle);\n  _Bool\n  legion_index_space_has_parent_index_partition(legion_runtime_t runtime,\n                                                legion_index_space_t handle);\n  legion_index_partition_t\n  legion_index_space_get_parent_index_partition(legion_runtime_t runtime,\n                                                legion_index_space_t handle);\n  void\n  legion_index_space_create_shared_ownership(legion_runtime_t runtime,\n                                             legion_context_t ctx,\n                                             legion_index_space_t handle);\n  void\n  legion_index_space_destroy(legion_runtime_t runtime,\n                             legion_context_t ctx,\n                             legion_index_space_t handle);\n  void\n  legion_index_space_destroy_unordered(legion_runtime_t runtime,\n                                       legion_context_t ctx,\n                                       legion_index_space_t handle,\n                                       _Bool unordered);\n  void\n  legion_index_space_attach_semantic_information(legion_runtime_t runtime,\n                                                 legion_index_space_t handle,\n                                                 legion_semantic_tag_t tag,\n                                                 const void *buffer,\n                                                 size_t size,\n                                                 _Bool is_mutable );\n  void\n  legion_index_space_retrieve_semantic_information(\n                                           legion_runtime_t runtime,\n                                           legion_index_space_t handle,\n                                           legion_semantic_tag_t tag,\n                                           const void **result,\n                                           size_t *size,\n                                           _Bool can_fail ,\n                                           _Bool wait_until_ready );\n  void\n  legion_index_space_attach_name(legion_runtime_t runtime,\n                                 legion_index_space_t handle,\n                                 const char *name,\n                                 _Bool is_mutable );\n  void\n  legion_index_space_retrieve_name(legion_runtime_t runtime,\n                                   legion_index_space_t handle,\n                                   const char **result);\n  int\n  legion_index_space_get_dim(legion_index_space_t handle);\n  legion_index_partition_t\n  legion_index_partition_create_coloring(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t parent,\n    legion_coloring_t coloring,\n    _Bool disjoint,\n    legion_color_t part_color );\n  legion_index_partition_t\n  legion_index_partition_create_domain_coloring(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t parent,\n    legion_domain_t color_space,\n    legion_domain_coloring_t coloring,\n    _Bool disjoint,\n    legion_color_t part_color );\n  legion_index_partition_t\n  legion_index_partition_create_point_coloring(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t parent,\n    legion_domain_t color_space,\n    legion_point_coloring_t coloring,\n    legion_partition_kind_t part_kind ,\n    legion_color_t color );\n  legion_index_partition_t\n  legion_index_partition_create_domain_point_coloring(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t parent,\n    legion_domain_t color_space,\n    legion_domain_point_coloring_t coloring,\n    legion_partition_kind_t part_kind ,\n    legion_color_t color );\n  legion_index_partition_t\n  legion_index_partition_create_multi_domain_point_coloring(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t parent,\n    legion_domain_t color_space,\n    legion_multi_domain_point_coloring_t coloring,\n    legion_partition_kind_t part_kind ,\n    legion_color_t color );\n  legion_index_partition_t legion_index_partition_create_blockify_1d( legion_runtime_t runtime, legion_context_t ctx, legion_index_space_t parent, legion_blockify_1d_t blockify, legion_color_t part_color ); legion_index_partition_t legion_index_partition_create_blockify_2d( legion_runtime_t runtime, legion_context_t ctx, legion_index_space_t parent, legion_blockify_2d_t blockify, legion_color_t part_color ); legion_index_partition_t legion_index_partition_create_blockify_3d( legion_runtime_t runtime, legion_context_t ctx, legion_index_space_t parent, legion_blockify_3d_t blockify, legion_color_t part_color ); legion_index_partition_t legion_index_partition_create_blockify_4d( legion_runtime_t runtime, legion_context_t ctx, legion_index_space_t parent, legion_blockify_4d_t blockify, legion_color_t part_color );\n  legion_index_partition_t\n  legion_index_partition_create_equal(legion_runtime_t runtime,\n                                      legion_context_t ctx,\n                                      legion_index_space_t parent,\n                                      legion_index_space_t color_space,\n                                      size_t granularity,\n                                      legion_color_t color );\n  legion_index_partition_t\n  legion_index_partition_create_by_weights(\n      legion_runtime_t runtime,\n      legion_context_t ctx,\n      legion_index_space_t parent,\n      legion_domain_point_t *colors,\n      int *weights,\n      size_t num_colors,\n      legion_index_space_t color_space,\n      size_t granularity ,\n      legion_color_t color );\n  legion_index_partition_t\n  legion_index_partition_create_by_weights_future_map(\n      legion_runtime_t runtime,\n      legion_context_t ctx,\n      legion_index_space_t parent,\n      legion_future_map_t future_map,\n      legion_index_space_t color_space,\n      size_t granularity ,\n      legion_color_t color );\n  legion_index_partition_t\n  legion_index_partition_create_by_union(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t parent,\n    legion_index_partition_t handle1,\n    legion_index_partition_t handle2,\n    legion_index_space_t color_space,\n    legion_partition_kind_t part_kind ,\n    legion_color_t color );\n  legion_index_partition_t\n  legion_index_partition_create_by_intersection(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t parent,\n    legion_index_partition_t handle1,\n    legion_index_partition_t handle2,\n    legion_index_space_t color_space,\n    legion_partition_kind_t part_kind ,\n    legion_color_t color );\n  legion_index_partition_t\n  legion_index_partition_create_by_intersection_mirror(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t parent,\n    legion_index_partition_t handle,\n    legion_partition_kind_t part_kind ,\n    legion_color_t color ,\n    _Bool dominates );\n  legion_index_partition_t\n  legion_index_partition_create_by_difference(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t parent,\n    legion_index_partition_t handle1,\n    legion_index_partition_t handle2,\n    legion_index_space_t color_space,\n    legion_partition_kind_t part_kind ,\n    legion_color_t color );\n  legion_index_partition_t\n  legion_index_partition_create_by_domain(\n      legion_runtime_t runtime,\n      legion_context_t ctx,\n      legion_index_space_t parent,\n      legion_domain_point_t *colors,\n      legion_domain_t *domains,\n      size_t num_color_domains,\n      legion_index_space_t color_space,\n      _Bool perform_intersections ,\n      legion_partition_kind_t part_kind ,\n      legion_color_t color );\n  legion_index_partition_t\n  legion_index_partition_create_by_domain_future_map(\n      legion_runtime_t runtime,\n      legion_context_t ctx,\n      legion_index_space_t parent,\n      legion_future_map_t future_map,\n      legion_index_space_t color_space,\n      _Bool perform_intersections ,\n      legion_partition_kind_t part_kind ,\n      legion_color_t color );\n  legion_index_partition_t\n  legion_index_partition_create_by_field(legion_runtime_t runtime,\n                                         legion_context_t ctx,\n                                         legion_logical_region_t handle,\n                                         legion_logical_region_t parent,\n                                         legion_field_id_t fid,\n                                         legion_index_space_t color_space,\n                                         legion_color_t color ,\n                                         legion_mapper_id_t id ,\n                                         legion_mapping_tag_id_t tag ,\n                                         legion_partition_kind_t part_kind );\n  legion_index_partition_t\n  legion_index_partition_create_by_image(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t handle,\n    legion_logical_partition_t projection,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    legion_index_space_t color_space,\n    legion_partition_kind_t part_kind ,\n    legion_color_t color ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t tag );\n  legion_index_partition_t\n  legion_index_partition_create_by_preimage(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_partition_t projection,\n    legion_logical_region_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    legion_index_space_t color_space,\n    legion_partition_kind_t part_kind ,\n    legion_color_t color ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t tag );\n  legion_index_partition_t\n  legion_index_partition_create_by_image_range(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t handle,\n    legion_logical_partition_t projection,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    legion_index_space_t color_space,\n    legion_partition_kind_t part_kind ,\n    legion_color_t color ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t tag );\n  legion_index_partition_t\n  legion_index_partition_create_by_preimage_range(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_partition_t projection,\n    legion_logical_region_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    legion_index_space_t color_space,\n    legion_partition_kind_t part_kind ,\n    legion_color_t color ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t tag );\n  legion_index_partition_t\n  legion_index_partition_create_by_restriction(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t parent,\n    legion_index_space_t color_space,\n    legion_domain_transform_t transform,\n    legion_domain_t extent,\n    legion_partition_kind_t part_kind ,\n    legion_color_t color );\n  legion_index_partition_t\n  legion_index_partition_create_pending_partition(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t parent,\n    legion_index_space_t color_space,\n    legion_partition_kind_t part_kind ,\n    legion_color_t color );\n  legion_index_space_t\n  legion_index_partition_create_index_space_union_spaces(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_partition_t parent,\n    legion_domain_point_t color,\n    const legion_index_space_t *spaces,\n    size_t num_spaces);\n  legion_index_space_t\n  legion_index_partition_create_index_space_union_partition(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_partition_t parent,\n    legion_domain_point_t color,\n    legion_index_partition_t handle);\n  legion_index_space_t\n  legion_index_partition_create_index_space_intersection_spaces(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_partition_t parent,\n    legion_domain_point_t color,\n    const legion_index_space_t *spaces,\n    size_t num_spaces);\n  legion_index_space_t\n  legion_index_partition_create_index_space_intersection_partition(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_partition_t parent,\n    legion_domain_point_t color,\n    legion_index_partition_t handle);\n  legion_index_space_t\n  legion_index_partition_create_index_space_difference(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_partition_t parent,\n    legion_domain_point_t color,\n    legion_index_space_t initial,\n    const legion_index_space_t *spaces,\n    size_t num_spaces);\n  _Bool\n  legion_index_partition_is_disjoint(legion_runtime_t runtime,\n                                     legion_index_partition_t handle);\n  _Bool\n  legion_index_partition_is_complete(legion_runtime_t runtime,\n                                     legion_index_partition_t handle);\n  legion_index_space_t\n  legion_index_partition_get_index_subspace(legion_runtime_t runtime,\n                                            legion_index_partition_t handle,\n                                            legion_color_t color);\n  legion_index_space_t\n  legion_index_partition_get_index_subspace_domain_point(\n    legion_runtime_t runtime,\n    legion_index_partition_t handle,\n    legion_domain_point_t color);\n  _Bool\n  legion_index_partition_has_index_subspace_domain_point(\n    legion_runtime_t runtime,\n    legion_index_partition_t handle,\n    legion_domain_point_t color);\n  legion_index_space_t\n  legion_index_partition_get_color_space(legion_runtime_t runtime,\n                                         legion_index_partition_t handle);\n  legion_color_t\n  legion_index_partition_get_color(legion_runtime_t runtime,\n                                   legion_index_partition_t handle);\n  legion_index_space_t\n  legion_index_partition_get_parent_index_space(legion_runtime_t runtime,\n                                                legion_index_partition_t handle);\n  void\n  legion_index_partition_create_shared_ownership(legion_runtime_t runtime,\n                                                 legion_context_t ctx,\n                                                 legion_index_partition_t handle);\n  void\n  legion_index_partition_destroy(legion_runtime_t runtime,\n                                 legion_context_t ctx,\n                                 legion_index_partition_t handle);\n  void\n  legion_index_partition_destroy_unordered(legion_runtime_t runtime,\n                                           legion_context_t ctx,\n                                           legion_index_partition_t handle,\n                                           _Bool unordered ,\n                                           _Bool recurse );\n  void\n  legion_index_partition_attach_semantic_information(\n                                                legion_runtime_t runtime,\n                                                legion_index_partition_t handle,\n                                                legion_semantic_tag_t tag,\n                                                const void *buffer,\n                                                size_t size,\n                                                _Bool is_mutable );\n  void\n  legion_index_partition_retrieve_semantic_information(\n                                           legion_runtime_t runtime,\n                                           legion_index_partition_t handle,\n                                           legion_semantic_tag_t tag,\n                                           const void **result,\n                                           size_t *size,\n                                           _Bool can_fail ,\n                                           _Bool wait_until_ready );\n  void\n  legion_index_partition_attach_name(legion_runtime_t runtime,\n                                     legion_index_partition_t handle,\n                                     const char *name,\n                                     _Bool is_mutable );\n  void\n  legion_index_partition_retrieve_name(legion_runtime_t runtime,\n                                       legion_index_partition_t handle,\n                                       const char **result);\n  legion_field_space_t\n  legion_field_space_create(legion_runtime_t runtime,\n                            legion_context_t ctx);\n  legion_field_space_t\n  legion_field_space_create_with_fields(legion_runtime_t runtime,\n                                        legion_context_t ctx,\n                                        size_t *field_sizes,\n                                        legion_field_id_t *field_ids,\n                                        size_t num_fields,\n                                        legion_custom_serdez_id_t serdez);\n  legion_field_space_t\n  legion_field_space_create_with_futures(legion_runtime_t runtime,\n                                         legion_context_t ctx,\n                                         legion_future_t *field_sizes,\n                                         legion_field_id_t *field_ids,\n                                         size_t num_fields,\n                                         legion_custom_serdez_id_t serdez);\n  void\n  legion_field_space_create_shared_ownership(legion_runtime_t runtime,\n                                             legion_context_t ctx,\n                                             legion_field_space_t handle);\n  void\n  legion_field_space_destroy(legion_runtime_t runtime,\n                             legion_context_t ctx,\n                             legion_field_space_t handle);\n  void\n  legion_field_space_destroy_unordered(legion_runtime_t runtime,\n                                       legion_context_t ctx,\n                                       legion_field_space_t handle,\n                                       _Bool unordered);\n  void\n  legion_field_space_attach_semantic_information(\n                                                legion_runtime_t runtime,\n                                                legion_field_space_t handle,\n                                                legion_semantic_tag_t tag,\n                                                const void *buffer,\n                                                size_t size,\n                                                _Bool is_mutable );\n  void\n  legion_field_space_retrieve_semantic_information(\n                                           legion_runtime_t runtime,\n                                           legion_field_space_t handle,\n                                           legion_semantic_tag_t tag,\n                                           const void **result,\n                                           size_t *size,\n                                           _Bool can_fail ,\n                                           _Bool wait_until_ready );\n  _Bool\n  legion_field_space_has_fields(legion_runtime_t runtime,\n                                legion_context_t ctx,\n                                legion_field_space_t handle,\n                                const legion_field_id_t *fields,\n                                size_t fields_size);\n  void\n  legion_field_id_attach_semantic_information(legion_runtime_t runtime,\n                                              legion_field_space_t handle,\n                                              legion_field_id_t id,\n                                              legion_semantic_tag_t tag,\n                                              const void *buffer,\n                                              size_t size,\n                                              _Bool is_mutable );\n  void\n  legion_field_id_retrieve_semantic_information(\n                                           legion_runtime_t runtime,\n                                           legion_field_space_t handle,\n                                           legion_field_id_t id,\n                                           legion_semantic_tag_t tag,\n                                           const void **result,\n                                           size_t *size,\n                                           _Bool can_fail ,\n                                           _Bool wait_until_ready );\n  void\n  legion_field_space_attach_name(legion_runtime_t runtime,\n                                 legion_field_space_t handle,\n                                 const char *name,\n                                 _Bool is_mutable );\n  void\n  legion_field_space_retrieve_name(legion_runtime_t runtime,\n                                   legion_field_space_t handle,\n                                   const char **result);\n  void\n  legion_field_id_attach_name(legion_runtime_t runtime,\n                              legion_field_space_t handle,\n                              legion_field_id_t id,\n                              const char *name,\n                              _Bool is_mutable );\n  void\n  legion_field_id_retrieve_name(legion_runtime_t runtime,\n                                legion_field_space_t handle,\n                                legion_field_id_t id,\n                                const char **result);\n  size_t\n  legion_field_id_get_size(legion_runtime_t runtime,\n                           legion_context_t ctx,\n                           legion_field_space_t handle,\n                           legion_field_id_t id);\n  legion_logical_region_t\n  legion_logical_region_create(legion_runtime_t runtime,\n                               legion_context_t ctx,\n                               legion_index_space_t index,\n                               legion_field_space_t fields,\n                               _Bool task_local);\n  void\n  legion_logical_region_create_shared_ownership(legion_runtime_t runtime,\n                                                legion_context_t ctx,\n                                                legion_logical_region_t handle);\n  void\n  legion_logical_region_destroy(legion_runtime_t runtime,\n                                legion_context_t ctx,\n                                legion_logical_region_t handle);\n  void\n  legion_logical_region_destroy_unordered(legion_runtime_t runtime,\n                                          legion_context_t ctx,\n                                          legion_logical_region_t handle,\n                                          _Bool unordered);\n  legion_color_t\n  legion_logical_region_get_color(legion_runtime_t runtime,\n                                  legion_logical_region_t handle);\n  legion_domain_point_t\n  legion_logical_region_get_color_domain_point(legion_runtime_t runtime_,\n                                               legion_logical_region_t handle_);\n  _Bool\n  legion_logical_region_has_parent_logical_partition(\n    legion_runtime_t runtime,\n    legion_logical_region_t handle);\n  legion_logical_partition_t\n  legion_logical_region_get_parent_logical_partition(\n    legion_runtime_t runtime,\n    legion_logical_region_t handle);\n  void\n  legion_logical_region_attach_semantic_information(\n                                                legion_runtime_t runtime,\n                                                legion_logical_region_t handle,\n                                                legion_semantic_tag_t tag,\n                                                const void *buffer,\n                                                size_t size,\n                                                _Bool is_mutable );\n  void\n  legion_logical_region_retrieve_semantic_information(\n                                           legion_runtime_t runtime,\n                                           legion_logical_region_t handle,\n                                           legion_semantic_tag_t tag,\n                                           const void **result,\n                                           size_t *size,\n                                           _Bool can_fail ,\n                                           _Bool wait_until_ready );\n  void\n  legion_logical_region_attach_name(legion_runtime_t runtime,\n                                    legion_logical_region_t handle,\n                                    const char *name,\n                                    _Bool is_mutable );\n  void\n  legion_logical_region_retrieve_name(legion_runtime_t runtime,\n                                      legion_logical_region_t handle,\n                                      const char **result);\n  legion_index_space_t\n  legion_logical_region_get_index_space(legion_logical_region_t handle);\n  legion_logical_partition_t\n  legion_logical_partition_create(legion_runtime_t runtime,\n                                  legion_context_t ctx,\n                                  legion_logical_region_t parent,\n                                  legion_index_partition_t handle);\n  legion_logical_partition_t\n  legion_logical_partition_create_by_tree(legion_runtime_t runtime,\n                                          legion_context_t ctx,\n                                          legion_index_partition_t handle,\n                                          legion_field_space_t fspace,\n                                          legion_region_tree_id_t tid);\n  void\n  legion_logical_partition_destroy(legion_runtime_t runtime,\n                                   legion_context_t ctx,\n                                   legion_logical_partition_t handle);\n  void\n  legion_logical_partition_destroy_unordered(legion_runtime_t runtime,\n                                             legion_context_t ctx,\n                                             legion_logical_partition_t handle,\n                                             _Bool unordered);\n  legion_logical_region_t\n  legion_logical_partition_get_logical_subregion(\n    legion_runtime_t runtime,\n    legion_logical_partition_t parent,\n    legion_index_space_t handle);\n  legion_logical_region_t\n  legion_logical_partition_get_logical_subregion_by_color(\n    legion_runtime_t runtime,\n    legion_logical_partition_t parent,\n    legion_color_t c);\n  legion_logical_region_t\n  legion_logical_partition_get_logical_subregion_by_color_domain_point(\n    legion_runtime_t runtime,\n    legion_logical_partition_t parent,\n    legion_domain_point_t c);\n  _Bool\n  legion_logical_partition_has_logical_subregion_by_color_domain_point(\n    legion_runtime_t runtime,\n    legion_logical_partition_t parent,\n    legion_domain_point_t c);\n  legion_logical_region_t\n  legion_logical_partition_get_logical_subregion_by_tree(\n    legion_runtime_t runtime,\n    legion_index_space_t handle,\n    legion_field_space_t fspace,\n    legion_region_tree_id_t tid);\n  legion_logical_region_t\n  legion_logical_partition_get_parent_logical_region(\n    legion_runtime_t runtime,\n    legion_logical_partition_t handle);\n  void\n  legion_logical_partition_attach_semantic_information(\n                                                legion_runtime_t runtime,\n                                                legion_logical_partition_t handle,\n                                                legion_semantic_tag_t tag,\n                                                const void *buffer,\n                                                size_t size,\n                                                _Bool is_mutable );\n  void\n  legion_logical_partition_retrieve_semantic_information(\n                                           legion_runtime_t runtime,\n                                           legion_logical_partition_t handle,\n                                           legion_semantic_tag_t tag,\n                                           const void **result,\n                                           size_t *size,\n                                           _Bool can_fail ,\n                                           _Bool wait_until_ready );\n  void\n  legion_logical_partition_attach_name(legion_runtime_t runtime,\n                                       legion_logical_partition_t handle,\n                                       const char *name,\n                                       _Bool is_mutable );\n  void\n  legion_logical_partition_retrieve_name(legion_runtime_t runtime,\n                                         legion_logical_partition_t handle,\n                                         const char **result);\n  legion_region_requirement_t\n  legion_region_requirement_create_logical_region(\n    legion_logical_region_t handle,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  legion_region_requirement_t\n  legion_region_requirement_create_logical_region_projection(\n    legion_logical_region_t handle,\n    legion_projection_id_t proj ,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  legion_region_requirement_t\n  legion_region_requirement_create_logical_partition(\n    legion_logical_partition_t handle,\n    legion_projection_id_t proj ,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  void\n  legion_region_requirement_destroy(legion_region_requirement_t handle);\n  void\n  legion_region_requirement_add_field(legion_region_requirement_t handle,\n                                      legion_field_id_t field,\n                                      _Bool instance_field);\n  void\n  legion_region_requirement_add_flags(legion_region_requirement_t handle,\n                                      legion_region_flags_t flags);\n  legion_logical_region_t\n  legion_region_requirement_get_region(legion_region_requirement_t handle);\n  legion_logical_region_t\n  legion_region_requirement_get_parent(legion_region_requirement_t handle);\n  legion_logical_partition_t\n  legion_region_requirement_get_partition(legion_region_requirement_t handle);\n  unsigned\n  legion_region_requirement_get_privilege_fields_size(\n      legion_region_requirement_t handle);\n  void\n  legion_region_requirement_get_privilege_fields(\n      legion_region_requirement_t handle,\n      legion_field_id_t* fields,\n      unsigned fields_size);\n  legion_field_id_t\n  legion_region_requirement_get_privilege_field(\n      legion_region_requirement_t handle,\n      unsigned idx);\n  unsigned\n  legion_region_requirement_get_instance_fields_size(\n      legion_region_requirement_t handle);\n  void\n  legion_region_requirement_get_instance_fields(\n      legion_region_requirement_t handle,\n      legion_field_id_t* fields,\n      unsigned fields_size);\n  legion_field_id_t\n  legion_region_requirement_get_instance_field(\n      legion_region_requirement_t handle,\n      unsigned idx);\n  legion_privilege_mode_t\n  legion_region_requirement_get_privilege(legion_region_requirement_t handle);\n  legion_coherence_property_t\n  legion_region_requirement_get_prop(legion_region_requirement_t handle);\n  legion_reduction_op_id_t\n  legion_region_requirement_get_redop(legion_region_requirement_t handle);\n  legion_mapping_tag_id_t\n  legion_region_requirement_get_tag(legion_region_requirement_t handle);\n  legion_handle_type_t\n  legion_region_requirement_get_handle_type(legion_region_requirement_t handle);\n  legion_projection_id_t\n  legion_region_requirement_get_projection(legion_region_requirement_t handle);\n  legion_output_requirement_t\n  legion_output_requirement_create(legion_field_space_t field_space,\n                                   legion_field_id_t *fields,\n                                   size_t fields_size,\n                                   _Bool global_indexing);\n  legion_output_requirement_t\n  legion_output_requirement_create_region_requirement(\n      legion_region_requirement_t handle);\n  void\n  legion_output_requirement_destroy(legion_output_requirement_t handle);\n  void\n  legion_output_requirement_add_field(legion_output_requirement_t handle,\n                                      legion_field_id_t field,\n                                      _Bool instance);\n  legion_logical_region_t\n  legion_output_requirement_get_region(legion_output_requirement_t handle);\n  legion_logical_region_t\n  legion_output_requirement_get_parent(legion_output_requirement_t handle);\n  legion_logical_partition_t\n  legion_output_requirement_get_partition(legion_output_requirement_t handle);\n  legion_field_allocator_t\n  legion_field_allocator_create(legion_runtime_t runtime,\n                                legion_context_t ctx,\n                                legion_field_space_t handle);\n  void\n  legion_field_allocator_destroy(legion_field_allocator_t handle);\n  legion_field_id_t\n  legion_auto_generate_id(void);\n  legion_field_id_t\n  legion_field_allocator_allocate_field(\n    legion_field_allocator_t allocator,\n    size_t field_size,\n    legion_field_id_t desired_fieldid );\n  legion_field_id_t\n  legion_field_allocator_allocate_field_future(\n    legion_field_allocator_t allocator,\n    legion_future_t field_size,\n    legion_field_id_t desired_fieldid );\n  void\n  legion_field_allocator_free_field(legion_field_allocator_t allocator,\n                                    legion_field_id_t fid);\n  void\n  legion_field_allocator_free_field_unordered(legion_field_allocator_t allocator,\n                                              legion_field_id_t fid,\n                                              _Bool unordered);\n  legion_field_id_t\n  legion_field_allocator_allocate_local_field(\n    legion_field_allocator_t allocator,\n    size_t field_size,\n    legion_field_id_t desired_fieldid );\n  legion_argument_map_t\n  legion_argument_map_create(void);\n  legion_argument_map_t\n  legion_argument_map_from_future_map(legion_future_map_t map);\n  void\n  legion_argument_map_set_point(legion_argument_map_t map,\n                                legion_domain_point_t dp,\n                                legion_task_argument_t arg,\n                                _Bool replace );\n  void\n  legion_argument_map_set_future(legion_argument_map_t map,\n                                 legion_domain_point_t dp,\n                                 legion_future_t future,\n                                 _Bool replace );\n  void\n  legion_argument_map_destroy(legion_argument_map_t handle);\n  legion_predicate_t\n  legion_predicate_create(legion_runtime_t runtime,\n                          legion_context_t ctx,\n                          legion_future_t f);\n  void\n  legion_predicate_destroy(legion_predicate_t handle);\n  const legion_predicate_t\n  legion_predicate_true(void);\n  const legion_predicate_t\n  legion_predicate_false(void);\n  legion_phase_barrier_t\n  legion_phase_barrier_create(legion_runtime_t runtime,\n                              legion_context_t ctx,\n                              unsigned arrivals);\n  void\n  legion_phase_barrier_destroy(legion_runtime_t runtime,\n                               legion_context_t ctx,\n                               legion_phase_barrier_t handle);\n  legion_phase_barrier_t\n  legion_phase_barrier_alter_arrival_count(legion_runtime_t runtime,\n                                           legion_context_t ctx,\n                                           legion_phase_barrier_t handle,\n                                           int delta);\n  void\n  legion_phase_barrier_arrive(legion_runtime_t runtime,\n                              legion_context_t ctx,\n                              legion_phase_barrier_t handle,\n                              unsigned count );\n  void\n  legion_phase_barrier_wait(legion_runtime_t runtime,\n                            legion_context_t ctx,\n                            legion_phase_barrier_t handle);\n  legion_phase_barrier_t\n  legion_phase_barrier_advance(legion_runtime_t runtime,\n                               legion_context_t ctx,\n                               legion_phase_barrier_t handle);\n  legion_dynamic_collective_t\n  legion_dynamic_collective_create(legion_runtime_t runtime,\n                                   legion_context_t ctx,\n                                   unsigned arrivals,\n                                   legion_reduction_op_id_t redop,\n                                   const void *init_value,\n                                   size_t init_size);\n  void\n  legion_dynamic_collective_destroy(legion_runtime_t runtime,\n                                    legion_context_t ctx,\n                                    legion_dynamic_collective_t handle);\n  legion_dynamic_collective_t\n  legion_dynamic_collective_alter_arrival_count(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_dynamic_collective_t handle,\n    int delta);\n  void\n  legion_dynamic_collective_arrive(legion_runtime_t runtime,\n                                   legion_context_t ctx,\n                                   legion_dynamic_collective_t handle,\n                                   const void *buffer,\n                                   size_t size,\n                                   unsigned count );\n  void\n  legion_dynamic_collective_defer_arrival(legion_runtime_t runtime,\n                                          legion_context_t ctx,\n                                          legion_dynamic_collective_t handle,\n                                          legion_future_t f,\n                                          unsigned count );\n  legion_future_t\n  legion_dynamic_collective_get_result(legion_runtime_t runtime,\n                                       legion_context_t ctx,\n                                       legion_dynamic_collective_t handle);\n  legion_dynamic_collective_t\n  legion_dynamic_collective_advance(legion_runtime_t runtime,\n                                    legion_context_t ctx,\n                                    legion_dynamic_collective_t handle);\n  legion_future_t\n  legion_future_from_untyped_pointer(legion_runtime_t runtime,\n                                     const void *buffer,\n                                     size_t size);\n  legion_future_t\n  legion_future_copy(legion_future_t handle);\n  void\n  legion_future_destroy(legion_future_t handle);\n  void\n  legion_future_get_void_result(legion_future_t handle);\n  void\n  legion_future_wait(legion_future_t handle,\n                     _Bool silence_warnings ,\n                     const char *warning_string );\n  _Bool\n  legion_future_is_empty(legion_future_t handle,\n                         _Bool block );\n  _Bool\n  legion_future_is_ready(legion_future_t handle);\n  _Bool\n  legion_future_is_ready_subscribe(legion_future_t handle, _Bool subscribe);\n  const void *\n  legion_future_get_untyped_pointer(legion_future_t handle);\n  size_t\n  legion_future_get_untyped_size(legion_future_t handle);\n  const void *\n  legion_future_get_metadata(legion_future_t handle, size_t *size );\n  legion_future_map_t\n  legion_future_map_copy(legion_future_map_t handle);\n  void\n  legion_future_map_destroy(legion_future_map_t handle);\n  void\n  legion_future_map_wait_all_results(legion_future_map_t handle);\n  legion_future_t\n  legion_future_map_get_future(legion_future_map_t handle,\n                               legion_domain_point_t point);\n  legion_domain_t\n  legion_future_map_get_domain(legion_future_map_t handle);\n  legion_future_t\n  legion_future_map_reduce(legion_runtime_t runtime,\n                           legion_context_t ctx,\n                           legion_future_map_t handle,\n                           legion_reduction_op_id_t redop,\n                           _Bool deterministic,\n                           legion_mapper_id_t map_id,\n                           legion_mapping_tag_id_t tag);\n  legion_future_map_t\n  legion_construct_future_map(legion_runtime_t runtime,\n                              legion_context_t ctx,\n                              legion_domain_t domain,\n                              legion_domain_point_t *points,\n                              legion_task_argument_t *buffers,\n                              size_t num_points,\n                              _Bool collective);\n  legion_future_map_t\n  legion_future_map_construct(legion_runtime_t runtime,\n                              legion_context_t ctx,\n                              legion_domain_t domain,\n                              legion_domain_point_t *points,\n                              legion_future_t *futures,\n                              size_t num_futures,\n                              _Bool collective);\n  legion_deferred_buffer_char_1d_t legion_deferred_buffer_char_1d_create( legion_rect_1d_t bounds, legion_memory_kind_t kind, char *initial_value); legion_deferred_buffer_char_2d_t legion_deferred_buffer_char_2d_create( legion_rect_2d_t bounds, legion_memory_kind_t kind, char *initial_value); legion_deferred_buffer_char_3d_t legion_deferred_buffer_char_3d_create( legion_rect_3d_t bounds, legion_memory_kind_t kind, char *initial_value); legion_deferred_buffer_char_4d_t legion_deferred_buffer_char_4d_create( legion_rect_4d_t bounds, legion_memory_kind_t kind, char *initial_value);\n  char* legion_deferred_buffer_char_1d_ptr( legion_deferred_buffer_char_1d_t buffer, legion_point_1d_t p); char* legion_deferred_buffer_char_2d_ptr( legion_deferred_buffer_char_2d_t buffer, legion_point_2d_t p); char* legion_deferred_buffer_char_3d_ptr( legion_deferred_buffer_char_3d_t buffer, legion_point_3d_t p); char* legion_deferred_buffer_char_4d_ptr( legion_deferred_buffer_char_4d_t buffer, legion_point_4d_t p);\n  void legion_deferred_buffer_char_1d_destroy( legion_deferred_buffer_char_1d_t buffer); void legion_deferred_buffer_char_2d_destroy( legion_deferred_buffer_char_2d_t buffer); void legion_deferred_buffer_char_3d_destroy( legion_deferred_buffer_char_3d_t buffer); void legion_deferred_buffer_char_4d_destroy( legion_deferred_buffer_char_4d_t buffer);\n  legion_task_launcher_t\n  legion_task_launcher_create(\n    legion_task_id_t tid,\n    legion_task_argument_t arg,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t tag );\n  legion_task_launcher_t\n  legion_task_launcher_create_from_buffer(\n    legion_task_id_t tid,\n    const void *buffer,\n    size_t buffer_size,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t tag );\n  void\n  legion_task_launcher_destroy(legion_task_launcher_t handle);\n  legion_future_t\n  legion_task_launcher_execute(legion_runtime_t runtime,\n                               legion_context_t ctx,\n                               legion_task_launcher_t launcher);\n  unsigned\n  legion_task_launcher_add_region_requirement_logical_region(\n    legion_task_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  unsigned\n  legion_task_launcher_add_region_requirement_logical_region_reduction(\n    legion_task_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_reduction_op_id_t redop,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  void\n  legion_task_launcher_set_region_requirement_logical_region(\n    legion_task_launcher_t launcher,\n    unsigned idx,\n    legion_logical_region_t handle,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  void\n  legion_task_launcher_set_region_requirement_logical_region_reduction(\n    legion_task_launcher_t launcher,\n    unsigned idx,\n    legion_logical_region_t handle,\n    legion_reduction_op_id_t redop,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  void\n  legion_task_launcher_add_field(legion_task_launcher_t launcher,\n                                 unsigned idx,\n                                 legion_field_id_t fid,\n                                 _Bool inst );\n  const void*\n  legion_index_launcher_get_projection_args(legion_region_requirement_t requirement,\n         size_t *size);\n  void\n  legion_index_launcher_set_projection_args(legion_index_launcher_t launcher_,\n         unsigned idx,\n         const void *args,\n         size_t size,\n         _Bool own);\n  void\n  legion_task_launcher_add_flags(legion_task_launcher_t launcher,\n                                 unsigned idx,\n                                 enum legion_region_flags_t flags);\n  void\n  legion_task_launcher_intersect_flags(legion_task_launcher_t launcher,\n                                       unsigned idx,\n                                       enum legion_region_flags_t flags);\n  unsigned\n  legion_task_launcher_add_index_requirement(\n    legion_task_launcher_t launcher,\n    legion_index_space_t handle,\n    legion_allocate_mode_t priv,\n    legion_index_space_t parent,\n    _Bool verified );\n  void\n  legion_task_launcher_add_future(legion_task_launcher_t launcher,\n                                  legion_future_t future);\n  void\n  legion_task_launcher_add_wait_barrier(legion_task_launcher_t launcher,\n                                        legion_phase_barrier_t bar);\n  void\n  legion_task_launcher_add_arrival_barrier(legion_task_launcher_t launcher,\n                                           legion_phase_barrier_t bar);\n  void\n  legion_task_launcher_set_argument(legion_task_launcher_t launcher,\n                                    legion_task_argument_t arg);\n  void\n  legion_task_launcher_set_point(legion_task_launcher_t launcher,\n                                 legion_domain_point_t point);\n  void\n  legion_task_launcher_set_sharding_space(legion_task_launcher_t launcher,\n                                          legion_index_space_t is);\n  void\n  legion_task_launcher_set_predicate_false_future(legion_task_launcher_t launcher,\n                                                  legion_future_t f);\n  void\n  legion_task_launcher_set_predicate_false_result(legion_task_launcher_t launcher,\n                                                  legion_task_argument_t arg);\n  void\n  legion_task_launcher_set_mapper(legion_task_launcher_t launcher,\n                                  legion_mapper_id_t mapper_id);\n  void\n  legion_task_launcher_set_mapping_tag(legion_task_launcher_t launcher,\n                                       legion_mapping_tag_id_t tag);\n  void\n  legion_task_launcher_set_enable_inlining(legion_task_launcher_t launcher,\n                                           _Bool enable_inlining);\n  void\n  legion_task_launcher_set_local_function_task(legion_task_launcher_t launcher,\n                                               _Bool local_function_task);\n  legion_index_launcher_t\n  legion_index_launcher_create(\n    legion_task_id_t tid,\n    legion_domain_t domain,\n    legion_task_argument_t global_arg,\n    legion_argument_map_t map,\n    legion_predicate_t pred ,\n    _Bool must ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t tag );\n  legion_index_launcher_t\n  legion_index_launcher_create_from_buffer(\n    legion_task_id_t tid,\n    legion_domain_t domain,\n    const void *buffer,\n    size_t buffer_size,\n    legion_argument_map_t map,\n    legion_predicate_t pred ,\n    _Bool must ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t tag );\n  void\n  legion_index_launcher_destroy(legion_index_launcher_t handle);\n  legion_future_map_t\n  legion_index_launcher_execute(legion_runtime_t runtime,\n                               legion_context_t ctx,\n                               legion_index_launcher_t launcher);\n  legion_future_t\n  legion_index_launcher_execute_reduction(legion_runtime_t runtime,\n                                          legion_context_t ctx,\n                                          legion_index_launcher_t launcher,\n                                          legion_reduction_op_id_t redop);\n  legion_future_map_t\n  legion_index_launcher_execute_outputs(legion_runtime_t runtime,\n                                        legion_context_t ctx,\n                                        legion_index_launcher_t launcher,\n                                        legion_output_requirement_t *reqs,\n                                        size_t reqs_size);\n  legion_future_t\n  legion_index_launcher_execute_deterministic_reduction(legion_runtime_t runtime,\n                                                        legion_context_t ctx,\n                                                        legion_index_launcher_t launcher,\n                                                        legion_reduction_op_id_t redop,\n                                                        _Bool deterministic);\n  legion_future_t\n  legion_index_launcher_execute_reduction_and_outputs(legion_runtime_t runtime,\n                                                      legion_context_t ctx,\n                                                      legion_index_launcher_t launcher,\n                                                      legion_reduction_op_id_t redop,\n                                                      _Bool deterministic,\n                                                      legion_output_requirement_t *reqs,\n                                                      size_t reqs_size);\n  unsigned\n  legion_index_launcher_add_region_requirement_logical_region(\n    legion_index_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_projection_id_t proj ,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  unsigned\n  legion_index_launcher_add_region_requirement_logical_partition(\n    legion_index_launcher_t launcher,\n    legion_logical_partition_t handle,\n    legion_projection_id_t proj ,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  unsigned\n  legion_index_launcher_add_region_requirement_logical_region_reduction(\n    legion_index_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_projection_id_t proj ,\n    legion_reduction_op_id_t redop,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  unsigned\n  legion_index_launcher_add_region_requirement_logical_partition_reduction(\n    legion_index_launcher_t launcher,\n    legion_logical_partition_t handle,\n    legion_projection_id_t proj ,\n    legion_reduction_op_id_t redop,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  void\n  legion_index_launcher_set_region_requirement_logical_region(\n    legion_index_launcher_t launcher,\n    unsigned idx,\n    legion_logical_region_t handle,\n    legion_projection_id_t proj ,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  void\n  legion_index_launcher_set_region_requirement_logical_partition(\n    legion_index_launcher_t launcher,\n    unsigned idx,\n    legion_logical_partition_t handle,\n    legion_projection_id_t proj ,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  void\n  legion_index_launcher_set_region_requirement_logical_region_reduction(\n    legion_index_launcher_t launcher,\n    unsigned idx,\n    legion_logical_region_t handle,\n    legion_projection_id_t proj ,\n    legion_reduction_op_id_t redop,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  void\n  legion_index_launcher_set_region_requirement_logical_partition_reduction(\n    legion_index_launcher_t launcher,\n    unsigned idx,\n    legion_logical_partition_t handle,\n    legion_projection_id_t proj ,\n    legion_reduction_op_id_t redop,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  void\n  legion_index_launcher_add_field(legion_index_launcher_t launcher,\n                                 unsigned idx,\n                                 legion_field_id_t fid,\n                                 _Bool inst );\n  void\n  legion_index_launcher_add_flags(legion_index_launcher_t launcher,\n                                  unsigned idx,\n                                  enum legion_region_flags_t flags);\n  void\n  legion_index_launcher_intersect_flags(legion_index_launcher_t launcher,\n                                        unsigned idx,\n                                        enum legion_region_flags_t flags);\n  unsigned\n  legion_index_launcher_add_index_requirement(\n    legion_index_launcher_t launcher,\n    legion_index_space_t handle,\n    legion_allocate_mode_t priv,\n    legion_index_space_t parent,\n    _Bool verified );\n  void\n  legion_index_launcher_add_future(legion_index_launcher_t launcher,\n                                   legion_future_t future);\n  void\n  legion_index_launcher_add_wait_barrier(legion_index_launcher_t launcher,\n                                         legion_phase_barrier_t bar);\n  void\n  legion_index_launcher_add_arrival_barrier(legion_index_launcher_t launcher,\n                                            legion_phase_barrier_t bar);\n  void\n  legion_index_launcher_add_point_future(legion_index_launcher_t launcher,\n                                         legion_argument_map_t map);\n  void\n  legion_index_launcher_set_global_arg(legion_index_launcher_t launcher,\n                                       legion_task_argument_t global_arg);\n  void\n  legion_index_launcher_set_sharding_space(legion_index_launcher_t launcher,\n                                           legion_index_space_t is);\n  void\n  legion_index_launcher_set_mapper(legion_index_launcher_t launcher,\n                                   legion_mapper_id_t mapper_id);\n  void\n  legion_index_launcher_set_mapping_tag(legion_index_launcher_t launcher,\n                                        legion_mapping_tag_id_t tag);\n  legion_inline_launcher_t\n  legion_inline_launcher_create_logical_region(\n    legion_logical_region_t handle,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t region_tag ,\n    _Bool verified ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  void\n  legion_inline_launcher_destroy(legion_inline_launcher_t handle);\n  legion_physical_region_t\n  legion_inline_launcher_execute(legion_runtime_t runtime,\n                                 legion_context_t ctx,\n                                 legion_inline_launcher_t launcher);\n  void\n  legion_inline_launcher_add_field(legion_inline_launcher_t launcher,\n                                   legion_field_id_t fid,\n                                   _Bool inst );\n  void\n  legion_runtime_remap_region(legion_runtime_t runtime,\n                              legion_context_t ctx,\n                              legion_physical_region_t region);\n  void\n  legion_runtime_unmap_region(legion_runtime_t runtime,\n                              legion_context_t ctx,\n                              legion_physical_region_t region);\n  void\n  legion_runtime_unmap_all_regions(legion_runtime_t runtime,\n                                   legion_context_t ctx);\n  void\n  legion_runtime_fill_field(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_logical_region_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    const void *value,\n    size_t value_size,\n    legion_predicate_t pred );\n  void\n  legion_runtime_fill_field_future(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_logical_region_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    legion_future_t f,\n    legion_predicate_t pred );\n  legion_fill_launcher_t\n  legion_fill_launcher_create(\n    legion_logical_region_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    const void *value,\n    size_t value_size,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t tag );\n  legion_fill_launcher_t\n  legion_fill_launcher_create_from_future(\n    legion_logical_region_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    legion_future_t f,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t tag );\n  void\n  legion_fill_launcher_destroy(legion_fill_launcher_t handle);\n  void\n  legion_fill_launcher_add_field(legion_fill_launcher_t handle,\n                                 legion_field_id_t fid);\n  void\n  legion_fill_launcher_execute(legion_runtime_t runtime,\n                               legion_context_t ctx,\n                               legion_fill_launcher_t launcher);\n  void\n  legion_fill_launcher_set_point(legion_fill_launcher_t launcher,\n                                 legion_domain_point_t point);\n  void legion_fill_launcher_set_sharding_space(legion_fill_launcher_t launcher,\n                                               legion_index_space_t space);\n  void\n  legion_runtime_index_fill_field(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_logical_partition_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    const void *value,\n    size_t value_size,\n    legion_projection_id_t proj ,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  void\n  legion_runtime_index_fill_field_with_space(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t space,\n    legion_logical_partition_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    const void *value,\n    size_t value_size,\n    legion_projection_id_t proj ,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  void\n  legion_runtime_index_fill_field_with_domain(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_domain_t domain,\n    legion_logical_partition_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    const void *value,\n    size_t value_size,\n    legion_projection_id_t proj ,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  void\n  legion_runtime_index_fill_field_future(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_logical_partition_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    legion_future_t f,\n    legion_projection_id_t proj ,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  void\n  legion_runtime_index_fill_field_future_with_space(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_index_space_t space,\n    legion_logical_partition_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    legion_future_t f,\n    legion_projection_id_t proj ,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  void\n  legion_runtime_index_fill_field_future_with_domain(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_domain_t domain,\n    legion_logical_partition_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    legion_future_t f,\n    legion_projection_id_t proj ,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  legion_index_fill_launcher_t\n  legion_index_fill_launcher_create_with_space(\n    legion_index_space_t space,\n    legion_logical_partition_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    const void *value,\n    size_t value_size,\n    legion_projection_id_t proj ,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  legion_index_fill_launcher_t\n  legion_index_fill_launcher_create_with_domain(\n    legion_domain_t domain,\n    legion_logical_partition_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    const void *value,\n    size_t value_size,\n    legion_projection_id_t proj ,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  legion_index_fill_launcher_t\n  legion_index_fill_launcher_create_from_future_with_space(\n    legion_index_space_t space,\n    legion_logical_partition_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    legion_future_t future,\n    legion_projection_id_t proj ,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  legion_index_fill_launcher_t\n  legion_index_fill_launcher_create_from_future_with_domain(\n    legion_domain_t domain,\n    legion_logical_partition_t handle,\n    legion_logical_region_t parent,\n    legion_field_id_t fid,\n    legion_future_t future,\n    legion_projection_id_t proj ,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  void\n  legion_index_fill_launcher_destroy(legion_index_fill_launcher_t handle);\n  void\n  legion_index_fill_launcher_add_field(legion_fill_launcher_t handle,\n                                       legion_field_id_t fid);\n  void\n  legion_index_fill_launcher_execute(legion_runtime_t runtime,\n                                     legion_context_t ctx,\n                                     legion_index_fill_launcher_t launcher);\n  void legion_index_fill_launcher_set_sharding_space(legion_index_fill_launcher_t launcher,\n                                                     legion_index_space_t space);\n  legion_region_requirement_t\n  legion_fill_get_requirement(legion_fill_t fill);\n  legion_field_map_t\n  legion_field_map_create(void);\n  void\n  legion_field_map_destroy(legion_field_map_t handle);\n  void\n  legion_field_map_insert(legion_field_map_t handle,\n                          legion_field_id_t key,\n                          const char *value);\n  legion_physical_region_t\n  legion_runtime_attach_hdf5(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    const char *filename,\n    legion_logical_region_t handle,\n    legion_logical_region_t parent,\n    legion_field_map_t field_map,\n    legion_file_mode_t mode);\n  void\n  legion_runtime_detach_hdf5(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    legion_physical_region_t region);\n  legion_copy_launcher_t\n  legion_copy_launcher_create(\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  void\n  legion_copy_launcher_destroy(legion_copy_launcher_t handle);\n  void\n  legion_copy_launcher_execute(legion_runtime_t runtime,\n                               legion_context_t ctx,\n                               legion_copy_launcher_t launcher);\n  unsigned\n  legion_copy_launcher_add_src_region_requirement_logical_region(\n    legion_copy_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  unsigned\n  legion_copy_launcher_add_dst_region_requirement_logical_region(\n    legion_copy_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  unsigned\n  legion_copy_launcher_add_dst_region_requirement_logical_region_reduction(\n    legion_copy_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_reduction_op_id_t redop,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  unsigned\n  legion_copy_launcher_add_src_indirect_region_requirement_logical_region(\n    legion_copy_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_field_id_t fid,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool is_range_indirection ,\n    _Bool verified );\n  unsigned\n  legion_copy_launcher_add_dst_indirect_region_requirement_logical_region(\n    legion_copy_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_field_id_t fid,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool is_range_indirection ,\n    _Bool verified );\n  void\n  legion_copy_launcher_add_src_field(legion_copy_launcher_t launcher,\n                                     unsigned idx,\n                                     legion_field_id_t fid,\n                                     _Bool inst );\n  void\n  legion_copy_launcher_add_dst_field(legion_copy_launcher_t launcher,\n                                     unsigned idx,\n                                     legion_field_id_t fid,\n                                     _Bool inst );\n  void\n  legion_copy_launcher_add_wait_barrier(legion_copy_launcher_t launcher,\n                                        legion_phase_barrier_t bar);\n  void\n  legion_copy_launcher_add_arrival_barrier(legion_copy_launcher_t launcher,\n                                           legion_phase_barrier_t bar);\n  void\n  legion_copy_launcher_set_possible_src_indirect_out_of_range(\n      legion_copy_launcher_t launcher, _Bool flag);\n  void\n  legion_copy_launcher_set_possible_dst_indirect_out_of_range(\n      legion_copy_launcher_t launcher, _Bool flag);\n  void\n  legion_copy_launcher_set_point(legion_copy_launcher_t launcher,\n                                 legion_domain_point_t point);\n  void legion_copy_launcher_set_sharding_space(legion_copy_launcher_t launcher,\n                                               legion_index_space_t space);\n  legion_region_requirement_t\n  legion_copy_get_requirement(legion_copy_t copy, unsigned idx);\n  legion_index_copy_launcher_t\n  legion_index_copy_launcher_create(\n    legion_domain_t domain,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  void\n  legion_index_copy_launcher_destroy(legion_index_copy_launcher_t handle);\n  void\n  legion_index_copy_launcher_execute(legion_runtime_t runtime,\n                                     legion_context_t ctx,\n                                     legion_index_copy_launcher_t launcher);\n  unsigned\n  legion_index_copy_launcher_add_src_region_requirement_logical_region(\n    legion_index_copy_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_projection_id_t proj ,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  unsigned\n  legion_index_copy_launcher_add_dst_region_requirement_logical_region(\n    legion_index_copy_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_projection_id_t proj ,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  unsigned\n  legion_index_copy_launcher_add_src_region_requirement_logical_partition(\n    legion_index_copy_launcher_t launcher,\n    legion_logical_partition_t handle,\n    legion_projection_id_t proj ,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  unsigned\n  legion_index_copy_launcher_add_dst_region_requirement_logical_partition(\n    legion_index_copy_launcher_t launcher,\n    legion_logical_partition_t handle,\n    legion_projection_id_t proj ,\n    legion_privilege_mode_t priv,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  unsigned\n  legion_index_copy_launcher_add_dst_region_requirement_logical_region_reduction(\n    legion_index_copy_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_projection_id_t proj ,\n    legion_reduction_op_id_t redop,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  unsigned\n  legion_index_copy_launcher_add_dst_region_requirement_logical_partition_reduction(\n    legion_index_copy_launcher_t launcher,\n    legion_logical_partition_t handle,\n    legion_projection_id_t proj ,\n    legion_reduction_op_id_t redop,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool verified );\n  unsigned\n  legion_index_copy_launcher_add_src_indirect_region_requirement_logical_region(\n    legion_index_copy_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_projection_id_t proj ,\n    legion_field_id_t fid,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool is_range_indirection ,\n    _Bool verified );\n  unsigned\n  legion_index_copy_launcher_add_dst_indirect_region_requirement_logical_region(\n    legion_index_copy_launcher_t launcher,\n    legion_logical_region_t handle,\n    legion_projection_id_t proj ,\n    legion_field_id_t fid,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool is_range_indirection ,\n    _Bool verified );\n  unsigned\n  legion_index_copy_launcher_add_src_indirect_region_requirement_logical_partition(\n    legion_index_copy_launcher_t launcher,\n    legion_logical_partition_t handle,\n    legion_projection_id_t proj ,\n    legion_field_id_t fid,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool is_range_indirection ,\n    _Bool verified );\n  unsigned\n  legion_index_copy_launcher_add_dst_indirect_region_requirement_logical_partition(\n    legion_index_copy_launcher_t launcher,\n    legion_logical_partition_t handle,\n    legion_projection_id_t proj ,\n    legion_field_id_t fid,\n    legion_coherence_property_t prop,\n    legion_logical_region_t parent,\n    legion_mapping_tag_id_t tag ,\n    _Bool is_range_indirection ,\n    _Bool verified );\n  void\n  legion_index_copy_launcher_add_src_field(legion_index_copy_launcher_t launcher,\n                                           unsigned idx,\n                                           legion_field_id_t fid,\n                                           _Bool inst );\n  void\n  legion_index_copy_launcher_add_dst_field(legion_index_copy_launcher_t launcher,\n                                           unsigned idx,\n                                           legion_field_id_t fid,\n                                           _Bool inst );\n  void\n  legion_index_copy_launcher_add_wait_barrier(legion_index_copy_launcher_t launcher,\n                                              legion_phase_barrier_t bar);\n  void\n  legion_index_copy_launcher_add_arrival_barrier(legion_index_copy_launcher_t launcher,\n                                                 legion_phase_barrier_t bar);\n  void\n  legion_index_copy_launcher_set_possible_src_indirect_out_of_range(\n      legion_index_copy_launcher_t launcher, _Bool flag);\n  void\n  legion_index_copy_launcher_set_possible_dst_indirect_out_of_range(\n      legion_index_copy_launcher_t launcher, _Bool flag);\n  void\n  legion_index_copy_launcher_set_sharding_space(legion_index_copy_launcher_t launcher,\n                                                legion_index_space_t is);\n  legion_acquire_launcher_t\n  legion_acquire_launcher_create(\n    legion_logical_region_t logical_region,\n    legion_logical_region_t parent_region,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t tag );\n  void\n  legion_acquire_launcher_destroy(legion_acquire_launcher_t handle);\n  void\n  legion_acquire_launcher_execute(legion_runtime_t runtime,\n                                  legion_context_t ctx,\n                                  legion_acquire_launcher_t launcher);\n  void\n  legion_acquire_launcher_add_field(legion_acquire_launcher_t launcher,\n                                    legion_field_id_t fid);\n  void\n  legion_acquire_launcher_add_wait_barrier(legion_acquire_launcher_t launcher,\n                                           legion_phase_barrier_t bar);\n  void\n  legion_acquire_launcher_add_arrival_barrier(\n    legion_acquire_launcher_t launcher,\n    legion_phase_barrier_t bar);\n  legion_release_launcher_t\n  legion_release_launcher_create(\n    legion_logical_region_t logical_region,\n    legion_logical_region_t parent_region,\n    legion_predicate_t pred ,\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t tag );\n  void\n  legion_release_launcher_destroy(legion_release_launcher_t handle);\n  void\n  legion_release_launcher_execute(legion_runtime_t runtime,\n                                  legion_context_t ctx,\n                                  legion_release_launcher_t launcher);\n  void\n  legion_release_launcher_add_field(legion_release_launcher_t launcher,\n                                    legion_field_id_t fid);\n  void\n  legion_release_launcher_add_wait_barrier(legion_release_launcher_t launcher,\n                                           legion_phase_barrier_t bar);\n  void\n  legion_release_launcher_add_arrival_barrier(\n    legion_release_launcher_t launcher,\n    legion_phase_barrier_t bar);\n  legion_attach_launcher_t\n  legion_attach_launcher_create(\n    legion_logical_region_t logical_region,\n    legion_logical_region_t parent_region,\n    legion_external_resource_t resource);\n  void\n  legion_attach_launcher_attach_hdf5(legion_attach_launcher_t handle,\n                                     const char *filename,\n                                     legion_field_map_t field_map,\n                                     legion_file_mode_t mode);\n  void\n  legion_attach_launcher_set_restricted(legion_attach_launcher_t handle,\n                                        _Bool restricted);\n  void\n  legion_attach_launcher_set_mapped(legion_attach_launcher_t handle,\n                                    _Bool mapped);\n  void\n  legion_attach_launcher_destroy(legion_attach_launcher_t handle);\n  legion_physical_region_t\n  legion_attach_launcher_execute(legion_runtime_t runtime,\n                                 legion_context_t ctx,\n                                 legion_attach_launcher_t launcher);\n  void\n  legion_attach_launcher_add_cpu_soa_field(legion_attach_launcher_t launcher,\n                                           legion_field_id_t fid,\n                                           void *base_ptr,\n                                           _Bool column_major);\n  legion_future_t\n  legion_detach_external_resource(legion_runtime_t runtime,\n                                  legion_context_t ctx,\n                                  legion_physical_region_t handle);\n  legion_future_t\n  legion_flush_detach_external_resource(legion_runtime_t runtime,\n                                        legion_context_t ctx,\n                                        legion_physical_region_t handle,\n                                        _Bool flush);\n  legion_future_t\n  legion_unordered_detach_external_resource(legion_runtime_t runtime,\n                                            legion_context_t ctx,\n                                            legion_physical_region_t handle,\n                                            _Bool flush,\n                                            _Bool unordered);\n  void\n  legion_context_progress_unordered_operations(legion_runtime_t runtime,\n                                               legion_context_t ctx);\n  legion_index_attach_launcher_t\n  legion_index_attach_launcher_create(\n      legion_logical_region_t parent_region,\n      legion_external_resource_t resource,\n      _Bool restricted );\n  void\n  legion_index_attach_launcher_set_restricted(\n      legion_index_attach_launcher_t handle, _Bool restricted);\n  void\n  legion_index_attach_launcher_attach_file(legion_index_attach_launcher_t handle,\n                                           legion_logical_region_t region,\n                                           const char *filename,\n                                           const legion_field_id_t *fields,\n                                           size_t num_fields,\n                                           legion_file_mode_t mode);\n  void\n  legion_index_attach_launcher_attach_hdf5(legion_index_attach_launcher_t handle,\n                                           legion_logical_region_t region,\n                                           const char *filename,\n                                           legion_field_map_t field_map,\n                                           legion_file_mode_t mode);\n  void\n  legion_index_attach_launcher_attach_array_soa(legion_index_attach_launcher_t handle,\n                                           legion_logical_region_t region,\n                                           void *base_ptr, _Bool column_major,\n                                           const legion_field_id_t *fields,\n                                           size_t num_fields,\n                                           legion_memory_t memory);\n  void\n  legion_index_attach_launcher_attach_array_aos(legion_index_attach_launcher_t handle,\n                                           legion_logical_region_t region,\n                                           void *base_ptr, _Bool column_major,\n                                           const legion_field_id_t *fields,\n                                           size_t num_fields,\n                                           legion_memory_t memory);\n  void\n  legion_index_attach_launcher_destroy(legion_index_attach_launcher_t handle);\n  legion_external_resources_t\n  legion_attach_external_resources(legion_runtime_t runtime,\n                                   legion_context_t ctx,\n                                   legion_attach_launcher_t launcher,\n                                   _Bool deduplicate_across_shards);\n  legion_future_t\n  legion_detach_external_resources(legion_runtime_t runtime,\n                                   legion_context_t ctx,\n                                   legion_external_resources_t,\n                                   _Bool flush, _Bool unordered);\n  legion_must_epoch_launcher_t\n  legion_must_epoch_launcher_create(\n    legion_mapper_id_t id ,\n    legion_mapping_tag_id_t launcher_tag );\n  void\n  legion_must_epoch_launcher_destroy(legion_must_epoch_launcher_t handle);\n  legion_future_map_t\n  legion_must_epoch_launcher_execute(legion_runtime_t runtime,\n                                     legion_context_t ctx,\n                                     legion_must_epoch_launcher_t launcher);\n  void\n  legion_must_epoch_launcher_add_single_task(\n    legion_must_epoch_launcher_t launcher,\n    legion_domain_point_t point,\n    legion_task_launcher_t handle);\n  void\n  legion_must_epoch_launcher_add_index_task(\n    legion_must_epoch_launcher_t launcher,\n    legion_index_launcher_t handle);\n  void\n  legion_must_epoch_launcher_set_launch_domain(\n    legion_must_epoch_launcher_t launcher,\n    legion_domain_t domain);\n  void\n  legion_must_epoch_launcher_set_launch_space(\n    legion_must_epoch_launcher_t launcher,\n    legion_index_space_t is);\n  legion_future_t\n  legion_runtime_issue_mapping_fence(legion_runtime_t runtime,\n                                     legion_context_t ctx);\n  legion_future_t\n  legion_runtime_issue_execution_fence(legion_runtime_t runtime,\n                                       legion_context_t ctx);\n  void\n  legion_runtime_begin_trace(legion_runtime_t runtime,\n                             legion_context_t ctx,\n                             legion_trace_id_t tid,\n                             _Bool logical_only);\n  void\n  legion_runtime_end_trace(legion_runtime_t runtime,\n                           legion_context_t ctx,\n                           legion_trace_id_t tid);\n  void\n  legion_runtime_complete_frame(legion_runtime_t runtime,\n                                legion_context_t ctx);\n  legion_future_t\n  legion_runtime_select_tunable_value(legion_runtime_t runtime,\n          legion_context_t ctx,\n          legion_tunable_id_t tid,\n          legion_mapper_id_t mapper ,\n          legion_mapping_tag_id_t tag );\n  legion_runtime_t\n  legion_runtime_get_runtime(void);\n  legion_context_t\n  legion_runtime_get_context(void);\n  void\n  legion_context_destroy(legion_context_t);\n  legion_processor_t\n  legion_runtime_get_executing_processor(legion_runtime_t runtime,\n                                         legion_context_t ctx);\n  void\n  legion_runtime_yield(legion_runtime_t runtime, legion_context_t ctx);\n  legion_shard_id_t\n  legion_runtime_local_shard(legion_runtime_t runtime, legion_context_t ctx);\n  size_t\n  legion_runtime_total_shards(legion_runtime_t runtime, legion_context_t ctx);\n  void\n  legion_runtime_enable_scheduler_lock(void);\n  void\n  legion_runtime_disable_scheduler_lock(void);\n  void\n  legion_runtime_print_once(legion_runtime_t runtime,\n                            legion_context_t ctx,\n                            FILE *f,\n                            const char *message);\n  void\n  legion_runtime_print_once_fd(legion_runtime_t runtime,\n                            legion_context_t ctx,\n                            int fd, const char *mode,\n                            const char *message);\n  void\n  legion_physical_region_destroy(legion_physical_region_t handle);\n  legion_physical_region_t\n  legion_physical_region_copy(legion_physical_region_t handle);\n  _Bool\n  legion_physical_region_is_mapped(legion_physical_region_t handle);\n  void\n  legion_physical_region_wait_until_valid(legion_physical_region_t handle);\n  _Bool\n  legion_physical_region_is_valid(legion_physical_region_t handle);\n  legion_logical_region_t\n  legion_physical_region_get_logical_region(legion_physical_region_t handle);\n  size_t\n  legion_physical_region_get_field_count(legion_physical_region_t handle);\n  legion_field_id_t\n  legion_physical_region_get_field_id(legion_physical_region_t handle, size_t index);\n  size_t\n  legion_physical_region_get_memory_count(legion_physical_region_t handle);\n  legion_memory_t\n  legion_physical_region_get_memory(legion_physical_region_t handle, size_t index);\n  legion_accessor_array_1d_t legion_physical_region_get_field_accessor_array_1d( legion_physical_region_t handle, legion_field_id_t fid); legion_accessor_array_2d_t legion_physical_region_get_field_accessor_array_2d( legion_physical_region_t handle, legion_field_id_t fid); legion_accessor_array_3d_t legion_physical_region_get_field_accessor_array_3d( legion_physical_region_t handle, legion_field_id_t fid); legion_accessor_array_4d_t legion_physical_region_get_field_accessor_array_4d( legion_physical_region_t handle, legion_field_id_t fid);\n  legion_accessor_array_1d_t legion_physical_region_get_field_accessor_array_1d_with_transform( legion_physical_region_t handle, legion_field_id_t fid, legion_domain_affine_transform_t transform); legion_accessor_array_2d_t legion_physical_region_get_field_accessor_array_2d_with_transform( legion_physical_region_t handle, legion_field_id_t fid, legion_domain_affine_transform_t transform); legion_accessor_array_3d_t legion_physical_region_get_field_accessor_array_3d_with_transform( legion_physical_region_t handle, legion_field_id_t fid, legion_domain_affine_transform_t transform); legion_accessor_array_4d_t legion_physical_region_get_field_accessor_array_4d_with_transform( legion_physical_region_t handle, legion_field_id_t fid, legion_domain_affine_transform_t transform);\n  void * legion_accessor_array_1d_raw_rect_ptr(legion_accessor_array_1d_t handle, legion_rect_1d_t rect, legion_rect_1d_t *subrect, legion_byte_offset_t *offsets); void * legion_accessor_array_2d_raw_rect_ptr(legion_accessor_array_2d_t handle, legion_rect_2d_t rect, legion_rect_2d_t *subrect, legion_byte_offset_t *offsets); void * legion_accessor_array_3d_raw_rect_ptr(legion_accessor_array_3d_t handle, legion_rect_3d_t rect, legion_rect_3d_t *subrect, legion_byte_offset_t *offsets); void * legion_accessor_array_4d_raw_rect_ptr(legion_accessor_array_4d_t handle, legion_rect_4d_t rect, legion_rect_4d_t *subrect, legion_byte_offset_t *offsets);\n  void\n  legion_accessor_array_1d_read(legion_accessor_array_1d_t handle,\n                                legion_ptr_t ptr,\n                                void *dst, size_t bytes);\n  void legion_accessor_array_1d_read_point(legion_accessor_array_1d_t handle, legion_point_1d_t point, void *dst, size_t bytes); void legion_accessor_array_2d_read_point(legion_accessor_array_2d_t handle, legion_point_2d_t point, void *dst, size_t bytes); void legion_accessor_array_3d_read_point(legion_accessor_array_3d_t handle, legion_point_3d_t point, void *dst, size_t bytes); void legion_accessor_array_4d_read_point(legion_accessor_array_4d_t handle, legion_point_4d_t point, void *dst, size_t bytes);\n  void\n  legion_accessor_array_1d_write(legion_accessor_array_1d_t handle,\n                                 legion_ptr_t ptr,\n                                 const void *src, size_t bytes);\n  void legion_accessor_array_1d_write_point(legion_accessor_array_1d_t handle, legion_point_1d_t point, const void *src, size_t bytes); void legion_accessor_array_2d_write_point(legion_accessor_array_2d_t handle, legion_point_2d_t point, const void *src, size_t bytes); void legion_accessor_array_3d_write_point(legion_accessor_array_3d_t handle, legion_point_3d_t point, const void *src, size_t bytes); void legion_accessor_array_4d_write_point(legion_accessor_array_4d_t handle, legion_point_4d_t point, const void *src, size_t bytes);\n  void *\n  legion_accessor_array_1d_ref(legion_accessor_array_1d_t handle,\n                               legion_ptr_t ptr);\n  void * legion_accessor_array_1d_ref_point(legion_accessor_array_1d_t handle, legion_point_1d_t point); void * legion_accessor_array_2d_ref_point(legion_accessor_array_2d_t handle, legion_point_2d_t point); void * legion_accessor_array_3d_ref_point(legion_accessor_array_3d_t handle, legion_point_3d_t point); void * legion_accessor_array_4d_ref_point(legion_accessor_array_4d_t handle, legion_point_4d_t point);\n  void legion_accessor_array_1d_destroy(legion_accessor_array_1d_t handle); void legion_accessor_array_2d_destroy(legion_accessor_array_2d_t handle); void legion_accessor_array_3d_destroy(legion_accessor_array_3d_t handle); void legion_accessor_array_4d_destroy(legion_accessor_array_4d_t handle);\n  void\n  legion_external_resources_destroy(legion_external_resources_t handle);\n  size_t\n  legion_external_resources_size(legion_external_resources_t handle);\n  legion_physical_region_t\n  legion_external_resources_get_region(legion_external_resources_t handle,\n                                       unsigned index);\n  enum legion_mappable_type_id_t\n  legion_mappable_get_type(legion_mappable_t mappable);\n  legion_task_t\n  legion_mappable_as_task(legion_mappable_t mappable);\n  legion_copy_t\n  legion_mappable_as_copy(legion_mappable_t mappable);\n  legion_fill_t\n  legion_mappable_as_fill(legion_mappable_t mappable);\n  legion_inline_t\n  legion_mappable_as_inline_mapping(legion_mappable_t mappable);\n  legion_unique_id_t\n  legion_context_get_unique_id(legion_context_t ctx);\n  legion_unique_id_t\n  legion_task_get_unique_id(legion_task_t task);\n  int\n  legion_task_get_depth(legion_task_t task);\n  legion_mapper_id_t\n  legion_task_get_mapper(legion_task_t task);\n  legion_mapping_tag_id_t\n  legion_task_get_tag(legion_task_t task);\n  void\n  legion_task_id_attach_semantic_information(legion_runtime_t runtime,\n                                             legion_task_id_t task_id,\n                                             legion_semantic_tag_t tag,\n                                             const void *buffer,\n                                             size_t size,\n                                             _Bool is_mutable );\n  void\n  legion_task_id_retrieve_semantic_information(\n                                           legion_runtime_t runtime,\n                                           legion_task_id_t task_id,\n                                           legion_semantic_tag_t tag,\n                                           const void **result,\n                                           size_t *size,\n                                           _Bool can_fail ,\n                                           _Bool wait_until_ready );\n  void\n  legion_task_id_attach_name(legion_runtime_t runtime,\n                             legion_task_id_t task_id,\n                             const char *name,\n                             _Bool is_mutable );\n  void\n  legion_task_id_retrieve_name(legion_runtime_t runtime,\n                               legion_task_id_t task_id,\n                               const char **result);\n  void *\n  legion_task_get_args(legion_task_t task);\n  size_t\n  legion_task_get_arglen(legion_task_t task);\n  legion_domain_t\n  legion_task_get_index_domain(legion_task_t task);\n  legion_domain_point_t\n  legion_task_get_index_point(legion_task_t task);\n  _Bool\n  legion_task_get_is_index_space(legion_task_t task);\n  void *\n  legion_task_get_local_args(legion_task_t task);\n  size_t\n  legion_task_get_local_arglen(legion_task_t task);\n  unsigned\n  legion_task_get_regions_size(legion_task_t task);\n  legion_region_requirement_t\n  legion_task_get_requirement(legion_task_t task, unsigned idx);\n  unsigned\n  legion_task_get_futures_size(legion_task_t task);\n  legion_future_t\n  legion_task_get_future(legion_task_t task, unsigned idx);\n  legion_task_id_t\n  legion_task_get_task_id(legion_task_t task);\n  legion_processor_t\n  legion_task_get_target_proc(legion_task_t task);\n  const char *\n  legion_task_get_name(legion_task_t task);\n  legion_region_requirement_t\n  legion_inline_get_requirement(legion_inline_t inline_operation);\n  legion_execution_constraint_set_t\n  legion_execution_constraint_set_create(void);\n  void\n  legion_execution_constraint_set_destroy(\n    legion_execution_constraint_set_t handle);\n  void\n  legion_execution_constraint_set_add_isa_constraint(\n    legion_execution_constraint_set_t handle,\n    uint64_t prop);\n  void\n  legion_execution_constraint_set_add_processor_constraint(\n    legion_execution_constraint_set_t handle,\n    legion_processor_kind_t proc_kind);\n  void\n  legion_execution_constraint_set_add_resource_constraint(\n    legion_execution_constraint_set_t handle,\n    legion_resource_constraint_t resource,\n    legion_equality_kind_t eq,\n    size_t value);\n  void\n  legion_execution_constraint_set_add_launch_constraint(\n    legion_execution_constraint_set_t handle,\n    legion_launch_constraint_t kind,\n    size_t value);\n  void\n  legion_execution_constraint_set_add_launch_constraint_multi_dim(\n    legion_execution_constraint_set_t handle,\n    legion_launch_constraint_t kind,\n    const size_t *values,\n    int dims);\n  void\n  legion_execution_constraint_set_add_colocation_constraint(\n    legion_execution_constraint_set_t handle,\n    const unsigned *indexes,\n    size_t num_indexes,\n    const legion_field_id_t *fields,\n    size_t num_fields);\n  legion_layout_constraint_set_t\n  legion_layout_constraint_set_create(void);\n  void\n  legion_layout_constraint_set_destroy(legion_layout_constraint_set_t handle);\n  legion_layout_constraint_id_t\n  legion_layout_constraint_set_register(\n    legion_runtime_t runtime,\n    legion_field_space_t fspace,\n    legion_layout_constraint_set_t handle,\n    const char *layout_name );\n  legion_layout_constraint_id_t\n  legion_layout_constraint_set_preregister(\n    legion_layout_constraint_set_t handle,\n    const char *layout_name );\n  void\n  legion_layout_constraint_set_release(legion_runtime_t runtime,\n                                       legion_layout_constraint_id_t handle);\n  void\n  legion_layout_constraint_set_add_specialized_constraint(\n    legion_layout_constraint_set_t handle,\n    legion_specialized_constraint_t specialized,\n    legion_reduction_op_id_t redop);\n  void\n  legion_layout_constraint_set_add_memory_constraint(\n    legion_layout_constraint_set_t handle,\n    legion_memory_kind_t kind);\n  void\n  legion_layout_constraint_set_add_field_constraint(\n    legion_layout_constraint_set_t handle,\n    const legion_field_id_t *fields,\n    size_t num_fields,\n    _Bool contiguous,\n    _Bool inorder);\n  void\n  legion_layout_constraint_set_add_ordering_constraint(\n    legion_layout_constraint_set_t handle,\n    const legion_dimension_kind_t *dims,\n    size_t num_dims,\n    _Bool contiguous);\n  void\n  legion_layout_constraint_set_add_splitting_constraint(\n    legion_layout_constraint_set_t handle,\n    legion_dimension_kind_t dim);\n  void\n  legion_layout_constraint_set_add_full_splitting_constraint(\n    legion_layout_constraint_set_t handle,\n    legion_dimension_kind_t dim,\n    size_t value);\n  void\n  legion_layout_constraint_set_add_dimension_constraint(\n    legion_layout_constraint_set_t handle,\n    legion_dimension_kind_t dim,\n    legion_equality_kind_t eq,\n    size_t value);\n  void\n  legion_layout_constraint_set_add_alignment_constraint(\n    legion_layout_constraint_set_t handle,\n    legion_field_id_t field,\n    legion_equality_kind_t eq,\n    size_t byte_boundary);\n  void\n  legion_layout_constraint_set_add_offset_constraint(\n    legion_layout_constraint_set_t handle,\n    legion_field_id_t field,\n    size_t offset);\n  void\n  legion_layout_constraint_set_add_pointer_constraint(\n    legion_layout_constraint_set_t handle,\n    legion_memory_t memory,\n    uintptr_t ptr);\n  legion_task_layout_constraint_set_t\n  legion_task_layout_constraint_set_create(void);\n  void\n  legion_task_layout_constraint_set_destroy(\n    legion_task_layout_constraint_set_t handle);\n  void\n  legion_task_layout_constraint_set_add_layout_constraint(\n    legion_task_layout_constraint_set_t handle,\n    unsigned idx,\n    legion_layout_constraint_id_t layout);\n  void\n  legion_runtime_initialize(int *argc,\n                            char ***argv,\n                            _Bool filter );\n  int\n  legion_runtime_start(int argc,\n                       char **argv,\n                       _Bool background );\n  int\n  legion_runtime_wait_for_shutdown(void);\n  void\n  legion_runtime_set_return_code(int return_code);\n  void\n  legion_runtime_set_top_level_task_id(legion_task_id_t top_id);\n  size_t\n  legion_runtime_get_maximum_dimension(void);\n  const legion_input_args_t\n  legion_runtime_get_input_args(void);\n  void\n  legion_runtime_add_registration_callback(\n    legion_registration_callback_pointer_t callback);\n  legion_mapper_id_t\n  legion_runtime_generate_library_mapper_ids(\n      legion_runtime_t runtime,\n      const char *library_name,\n      size_t count);\n  void\n  legion_runtime_replace_default_mapper(\n    legion_runtime_t runtime,\n    legion_mapper_t mapper,\n    legion_processor_t proc);\n  legion_projection_id_t\n  legion_runtime_generate_library_projection_ids(\n      legion_runtime_t runtime,\n      const char *library_name,\n      size_t count);\n  legion_sharding_id_t\n  legion_runtime_generate_library_sharding_ids(\n      legion_runtime_t runtime,\n      const char *library_name,\n      size_t count);\n  legion_reduction_op_id_t\n  legion_runtime_generate_library_reduction_ids(\n      legion_runtime_t runtime,\n      const char *library_name,\n      size_t count);\n  void\n  legion_runtime_preregister_projection_functor(\n    legion_projection_id_t id,\n    _Bool exclusive,\n    unsigned depth,\n    legion_projection_functor_logical_region_t region_functor,\n    legion_projection_functor_logical_partition_t partition_functor);\n  void\n  legion_runtime_preregister_projection_functor_mappable(\n    legion_projection_id_t id,\n    _Bool exclusive,\n    unsigned depth,\n    legion_projection_functor_logical_region_mappable_t region_functor,\n    legion_projection_functor_logical_partition_mappable_t partition_functor);\n  void\n  legion_runtime_register_projection_functor(\n    legion_runtime_t runtime,\n    legion_projection_id_t id,\n    _Bool exclusive,\n    unsigned depth,\n    legion_projection_functor_logical_region_t region_functor,\n    legion_projection_functor_logical_partition_t partition_functor);\n  void\n  legion_runtime_register_projection_functor_mappable(\n    legion_runtime_t runtime,\n    legion_projection_id_t id,\n    _Bool exclusive,\n    unsigned depth,\n    legion_projection_functor_logical_region_mappable_t region_functor,\n    legion_projection_functor_logical_partition_mappable_t partition_functor);\n  legion_task_id_t\n  legion_runtime_generate_library_task_ids(\n      legion_runtime_t runtime,\n      const char *library_name,\n      size_t count);\n  legion_task_id_t\n  legion_runtime_register_task_variant_fnptr(\n    legion_runtime_t runtime,\n    legion_task_id_t id ,\n    const char *task_name ,\n    const char *variant_name ,\n    _Bool global,\n    legion_execution_constraint_set_t execution_constraints,\n    legion_task_layout_constraint_set_t layout_constraints,\n    legion_task_config_options_t options,\n    legion_task_pointer_wrapped_t wrapped_task_pointer,\n    const void *userdata,\n    size_t userlen);\n  legion_task_id_t\n  legion_runtime_preregister_task_variant_fnptr(\n    legion_task_id_t id ,\n    legion_variant_id_t variant_id ,\n    const char *task_name ,\n    const char *variant_name ,\n    legion_execution_constraint_set_t execution_constraints,\n    legion_task_layout_constraint_set_t layout_constraints,\n    legion_task_config_options_t options,\n    legion_task_pointer_wrapped_t wrapped_task_pointer,\n    const void *userdata,\n    size_t userlen);\n  legion_task_id_t\n  legion_runtime_register_task_variant_python_source(\n    legion_runtime_t runtime,\n    legion_task_id_t id ,\n    const char *task_name ,\n    _Bool global,\n    legion_execution_constraint_set_t execution_constraints,\n    legion_task_layout_constraint_set_t layout_constraints,\n    legion_task_config_options_t options,\n    const char *module_name,\n    const char *function_name,\n    const void *userdata,\n    size_t userlen);\n  legion_task_id_t\n  legion_runtime_register_task_variant_python_source_qualname(\n    legion_runtime_t runtime,\n    legion_task_id_t id ,\n    const char *task_name ,\n    _Bool global,\n    legion_execution_constraint_set_t execution_constraints,\n    legion_task_layout_constraint_set_t layout_constraints,\n    legion_task_config_options_t options,\n    const char *module_name,\n    const char **function_qualname,\n    size_t function_qualname_len,\n    const void *userdata,\n    size_t userlen);\n  void\n  legion_task_preamble(\n    const void *data,\n    size_t datalen,\n    realm_id_t proc_id,\n    legion_task_t *taskptr,\n    const legion_physical_region_t **regionptr,\n    unsigned * num_regions_ptr,\n    legion_context_t * ctxptr,\n    legion_runtime_t * runtimeptr);\n  void\n  legion_task_postamble(\n    legion_runtime_t runtime,\n    legion_context_t ctx,\n    const void *retval,\n    size_t retsize);\n  unsigned long long\n  legion_get_current_time_in_micros(void);\n  unsigned long long\n  legion_get_current_time_in_nanos(void);\n  legion_future_t\n  legion_issue_timing_op_seconds(legion_runtime_t runtime,\n                                 legion_context_t ctx);\n  legion_future_t\n  legion_issue_timing_op_microseconds(legion_runtime_t runtime,\n                                      legion_context_t ctx);\n  legion_future_t\n  legion_issue_timing_op_nanoseconds(legion_runtime_t runtime,\n                                     legion_context_t ctx);\n  legion_machine_t\n  legion_machine_create(void);\n  void\n  legion_machine_destroy(legion_machine_t handle);\n  void\n  legion_machine_get_all_processors(\n    legion_machine_t machine,\n    legion_processor_t *processors,\n    size_t processors_size);\n  size_t\n  legion_machine_get_all_processors_size(legion_machine_t machine);\n  void\n  legion_machine_get_all_memories(\n    legion_machine_t machine,\n    legion_memory_t *memories,\n    size_t memories_size);\n  size_t\n  legion_machine_get_all_memories_size(legion_machine_t machine);\n  legion_processor_kind_t\n  legion_processor_kind(legion_processor_t proc);\n  legion_address_space_t\n  legion_processor_address_space(legion_processor_t proc);\n  legion_memory_kind_t\n  legion_memory_kind(legion_memory_t mem);\n  legion_address_space_t\n  legion_memory_address_space(legion_memory_t mem);\n  legion_processor_query_t\n  legion_processor_query_create(legion_machine_t machine);\n  legion_processor_query_t\n  legion_processor_query_create_copy(legion_processor_query_t query);\n  void\n  legion_processor_query_destroy(legion_processor_query_t handle);\n  void\n  legion_processor_query_only_kind(legion_processor_query_t query,\n                                   legion_processor_kind_t kind);\n  void\n  legion_processor_query_local_address_space(legion_processor_query_t query);\n  void\n  legion_processor_query_same_address_space_as_processor(legion_processor_query_t query,\n                                                         legion_processor_t proc);\n  void\n  legion_processor_query_same_address_space_as_memory(legion_processor_query_t query,\n                                                      legion_memory_t mem);\n  void\n  legion_processor_query_has_affinity_to_memory(legion_processor_query_t query,\n                                                legion_memory_t mem,\n                                                unsigned min_bandwidth ,\n                                                unsigned max_latency );\n  void\n  legion_processor_query_best_affinity_to_memory(legion_processor_query_t query,\n                                                 legion_memory_t mem,\n                                                 int bandwidth_weight ,\n                                                 int latency_weight );\n  size_t\n  legion_processor_query_count(legion_processor_query_t query);\n  legion_processor_t\n  legion_processor_query_first(legion_processor_query_t query);\n  legion_processor_t\n  legion_processor_query_next(legion_processor_query_t query,\n                              legion_processor_t after);\n  legion_processor_t\n  legion_processor_query_random(legion_processor_query_t query);\n  legion_memory_query_t\n  legion_memory_query_create(legion_machine_t machine);\n  legion_memory_query_t\n  legion_memory_query_create_copy(legion_memory_query_t query);\n  void\n  legion_memory_query_destroy(legion_memory_query_t handle);\n  void\n  legion_memory_query_only_kind(legion_memory_query_t query,\n                                legion_memory_kind_t kind);\n  void\n  legion_memory_query_local_address_space(legion_memory_query_t query);\n  void\n  legion_memory_query_same_address_space_as_processor(legion_memory_query_t query,\n                                                      legion_processor_t proc);\n  void\n  legion_memory_query_same_address_space_as_memory(legion_memory_query_t query,\n                                                   legion_memory_t mem);\n  void\n  legion_memory_query_has_affinity_to_processor(legion_memory_query_t query,\n                                                legion_processor_t proc,\n                                                unsigned min_bandwidth ,\n                                                unsigned max_latency );\n  void\n  legion_memory_query_has_affinity_to_memory(legion_memory_query_t query,\n                                             legion_memory_t mem,\n                                             unsigned min_bandwidth ,\n                                             unsigned max_latency );\n  void\n  legion_memory_query_best_affinity_to_processor(legion_memory_query_t query,\n                                                 legion_processor_t proc,\n                                                 int bandwidth_weight ,\n                                                 int latency_weight );\n  void\n  legion_memory_query_best_affinity_to_memory(legion_memory_query_t query,\n                                              legion_memory_t mem,\n                                              int bandwidth_weight ,\n                                              int latency_weight );\n  size_t\n  legion_memory_query_count(legion_memory_query_t query);\n  legion_memory_t\n  legion_memory_query_first(legion_memory_query_t query);\n  legion_memory_t\n  legion_memory_query_next(legion_memory_query_t query,\n                           legion_memory_t after);\n  legion_memory_t\n  legion_memory_query_random(legion_memory_query_t query);\n  void\n  legion_physical_instance_destroy(legion_physical_instance_t instance);\n  void\n  legion_slice_task_output_slices_add(\n      legion_slice_task_output_t output,\n      legion_task_slice_t slice);\n  void\n  legion_slice_task_output_verify_correctness_set(\n      legion_slice_task_output_t output,\n      _Bool verify_correctness);\n  void\n  legion_map_task_output_chosen_instances_clear_all(\n      legion_map_task_output_t output);\n  void\n  legion_map_task_output_chosen_instances_clear_each(\n      legion_map_task_output_t output,\n      size_t idx);\n  void\n  legion_map_task_output_chosen_instances_add(\n      legion_map_task_output_t output,\n      legion_physical_instance_t *instances,\n      size_t instances_size);\n  void\n  legion_map_task_output_chosen_instances_set(\n      legion_map_task_output_t output,\n      size_t idx,\n      legion_physical_instance_t *instances,\n      size_t instances_size);\n  void\n  legion_map_task_output_target_procs_clear(\n      legion_map_task_output_t output);\n  void\n  legion_map_task_output_target_procs_add(\n      legion_map_task_output_t output,\n      legion_processor_t proc);\n  legion_processor_t\n  legion_map_task_output_target_procs_get(\n      legion_map_task_output_t output,\n      size_t idx);\n  void\n  legion_map_task_output_task_priority_set(\n      legion_map_task_output_t output,\n      legion_task_priority_t priority);\n  _Bool\n  legion_mapper_runtime_create_physical_instance_layout_constraint(\n      legion_mapper_runtime_t runtime,\n      legion_mapper_context_t ctx,\n      legion_memory_t target_memory,\n      legion_layout_constraint_set_t constraints,\n      const legion_logical_region_t *regions,\n      size_t regions_size,\n      legion_physical_instance_t *result,\n      _Bool acquire,\n      legion_garbage_collection_priority_t priority);\n  _Bool\n  legion_mapper_runtime_create_physical_instance_layout_constraint_id(\n      legion_mapper_runtime_t runtime,\n      legion_mapper_context_t ctx,\n      legion_memory_t target_memory,\n      legion_layout_constraint_id_t layout_id,\n      const legion_logical_region_t *regions,\n      size_t regions_size,\n      legion_physical_instance_t *result,\n      _Bool acquire,\n      legion_garbage_collection_priority_t priority);\n  _Bool\n  legion_mapper_runtime_find_or_create_physical_instance_layout_constraint(\n      legion_mapper_runtime_t runtime,\n      legion_mapper_context_t ctx,\n      legion_memory_t target_memory,\n      legion_layout_constraint_set_t constraints,\n      const legion_logical_region_t *regions,\n      size_t regions_size,\n      legion_physical_instance_t *result,\n      _Bool *created,\n      _Bool acquire,\n      legion_garbage_collection_priority_t priority,\n      _Bool tight_region_bounds);\n  _Bool\n  legion_mapper_runtime_find_or_create_physical_instance_layout_constraint_id(\n      legion_mapper_runtime_t runtime,\n      legion_mapper_context_t ctx,\n      legion_memory_t target_memory,\n      legion_layout_constraint_id_t layout_id,\n      const legion_logical_region_t *regions,\n      size_t regions_size,\n      legion_physical_instance_t *result,\n      _Bool *created,\n      _Bool acquire,\n      legion_garbage_collection_priority_t priority,\n      _Bool tight_region_bounds);\n  _Bool\n  legion_mapper_runtime_find_physical_instance_layout_constraint(\n      legion_mapper_runtime_t runtime,\n      legion_mapper_context_t ctx,\n      legion_memory_t target_memory,\n      legion_layout_constraint_set_t constraints,\n      const legion_logical_region_t *regions,\n      size_t regions_size,\n      legion_physical_instance_t *result,\n      _Bool acquire,\n      _Bool tight_region_bounds);\n  _Bool\n  legion_mapper_runtime_find_physical_instance_layout_constraint_id(\n      legion_mapper_runtime_t runtime,\n      legion_mapper_context_t ctx,\n      legion_memory_t target_memory,\n      legion_layout_constraint_id_t layout_id,\n      const legion_logical_region_t *regions,\n      size_t regions_size,\n      legion_physical_instance_t *result,\n      _Bool acquire,\n      _Bool tight_region_bounds);\n  _Bool\n  legion_mapper_runtime_acquire_instance(\n      legion_mapper_runtime_t runtime,\n      legion_mapper_context_t ctx,\n      legion_physical_instance_t instance);\n  _Bool\n  legion_mapper_runtime_acquire_instances(\n      legion_mapper_runtime_t runtime,\n      legion_mapper_context_t ctx,\n      legion_physical_instance_t *instances,\n      size_t instances_size);\n  legion_shard_id_t\n  legion_context_get_shard_id(legion_runtime_t ,\n                              legion_context_t ,\n                              _Bool );\n  size_t\n  legion_context_get_num_shards(legion_runtime_t ,\n                                legion_context_t ,\n                                _Bool );\n  legion_future_t\n  legion_context_consensus_match(legion_runtime_t ,\n                                 legion_context_t ,\n                                 const void* ,\n                                 void* ,\n                                 size_t ,\n                                 size_t );\n  legion_physical_region_t\n  legion_get_physical_region_by_id(\n      legion_physical_region_t *regionptr,\n      int id,\n      int num_regions);\n'

ffi = cffi.FFI()
ffi.cdef(header)
lib = ffi.dlopen(None)
